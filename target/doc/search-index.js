var searchIndex = JSON.parse('{\
"gadget_service":{"doc":"Raspberry Pi Gadget Setup Service","t":[17,13,3,4,13,17,13,13,17,17,17,17,17,13,17,17,17,17,17,17,13,11,11,11,11,11,11,11,11,5,11,12,11,5,5,5,11,11,11,11,11,11,11,11,5,5,11,11,5,5,11,11,11,11,11,11,5,11,11,11,11],"n":["CONFIG_LOC","Clean","Cli","Commands","Configure","DATA_LOC","Disable","Enable","GADGET_SCHEMA","GADGET_SERVICE_DISABLE","GADGET_SERVICE_ENABLE","GADGET_SERVICE_INSTALL","GADGET_SERVICE_UNINSTALL","Install","KEYBOARD_DESC","KEYBOARD_FILE","MOUSE_DESC","MOUSE_FILE","SERVICE","SERVICE_LOC","Uninstall","augment_args","augment_args_for_update","augment_subcommands","augment_subcommands_for_update","borrow","borrow","borrow_mut","borrow_mut","clean","command","command","command_for_update","configure","disable","enable","from","from","from_arg_matches","from_arg_matches","from_arg_matches_mut","from_arg_matches_mut","group_id","has_subcommand","ignore_not_found","install","into","into","main","run_command","try_from","try_from","try_into","try_into","type_id","type_id","uninstall","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches_mut","update_from_arg_matches_mut"],"q":["gadget_service","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","Remove all files created during install","","","Configure the usb gadget","","Disable","Enable","","","","","","Install the gadget service","","","","","","","Uninstall the gadget service","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","",""],"i":[0,7,0,0,7,0,7,7,0,0,0,0,0,7,0,0,0,0,0,0,7,4,4,7,7,4,7,4,7,0,4,4,4,0,0,0,4,7,4,7,4,7,4,7,0,0,4,7,0,0,4,7,4,7,4,7,0,4,7,4,7],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,1],[1,1],[1,1],[1,1],[[]],[[]],[[]],[[]],[[],2],[[],1],0,[[],1],[[]],[[],2],[[],2],[[]],[[]],[3,[[6,[4,5]]]],[3,[[6,[7,5]]]],[3,[[6,[4,5]]]],[3,[[6,[7,5]]]],[[],[[9,[8]]]],[10,11],[2,2],[[],2],[[]],[[]],[[]],[10,2],[[],6],[[],6],[[],6],[[],6],[[],12],[[],12],[[],2],[[4,3],[[6,[5]]]],[[7,3],[[6,[5]]]],[[4,3],[[6,[5]]]],[[7,3],[[6,[5]]]]],"p":[[3,"Command"],[6,"Result"],[3,"ArgMatches"],[3,"Cli"],[6,"Error"],[4,"Result"],[4,"Commands"],[3,"Id"],[4,"Option"],[15,"str"],[15,"bool"],[3,"TypeId"]]},\
"hid_interface":{"doc":"Hid-Interface","t":[3,3,8,3,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,12,5,12,12,11,11,10,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["Args","LEDState","OrExit","Writable","augment_args","augment_args_for_update","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","command","command_for_update","fetch","fetch","file","from","from","from","from_arg_matches","from_arg_matches_mut","group_id","into","into","into","keyboard","main","mount","mouse","new","new","or_exit","packet","size","size","tick","tick","tick_interval","tick_interval","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","update","update","update_from_arg_matches","update_from_arg_matches_mut","vzip","vzip","vzip"],"q":["hid_interface","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Keyboard Interface Path (Default: /dev/hidg1)","","Mount point","Mouse Interface Path (Default: /dev/hidg0)","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,8,8,2,6,8,2,6,8,8,8,2,6,6,2,6,8,8,8,8,2,6,8,8,0,8,8,2,6,22,2,2,6,2,6,2,6,2,6,8,2,6,8,2,6,8,2,6,8,8,2,6,8],"f":[0,0,0,0,[1,1],[1,1],[[]],[[]],[[]],[[]],[[]],[[]],[[],1],[[],1],[2,[[5,[[4,[3]]]]]],[6,[[5,[[4,[3]]]]]],0,[[]],[[]],[[]],[7,[[10,[8,9]]]],[7,[[10,[8,9]]]],[[],[[12,[11]]]],[[]],[[]],[[]],0,[[]],0,0,[[13,13,13],[[15,[14]]]],[16,[[15,[14]]]],[17],0,[2,[[5,[[4,[3]]]]]],[6,[[5,[[4,[3]]]]]],[2,[[5,[[4,[3]]]]]],[6,[[5,[[4,[3]]]]]],[2,18],[6,18],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],19],[[],19],[[],19],[[2,[21,[20]]],[[5,[[4,[3]]]]]],[[6,[21,[20]]],[[5,[[4,[3]]]]]],[[8,7],[[10,[9]]]],[[8,7],[[10,[9]]]],[[]],[[]],[[]]],"p":[[3,"Command"],[3,"LEDState"],[8,"Future"],[3,"Box"],[3,"Pin"],[3,"Writable"],[3,"ArgMatches"],[3,"Args"],[6,"Error"],[4,"Result"],[3,"Id"],[4,"Option"],[3,"String"],[4,"Configuration"],[6,"Result"],[3,"PathBuf"],[15,"str"],[3,"Duration"],[3,"TypeId"],[15,"u8"],[3,"Vec"],[8,"OrExit"]]},\
"key_module":{"doc":"Key-module","t":[3,11,11,11,11,11,11,12,11,0,11,11,11,11,11,11,11,11,11,11,11,11,0,0,11,12,11,11,11,11,11,8,6,3,3,3,6,3,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,5,12,12,12,10,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,8,6,6,3,3,18,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,12,10,11,11,11,10,11,11,11,11,8,6,3,3,3,6,3,0,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,5,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,8,6,6,3,3,18,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,12,11,11,11,11,11,8,6,6,3,0,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,10,11,10,11,10,11,11,11,11,11,11,5,10,11,10,11,12,12,12,10,11,10,11,10,11,10,11,10,11,10,11,11,10,11,10,11,10,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,8,6,6,3,3,18,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,10,11,10,11,10,11,11,10,11,10,11,12,10,11,10,11,10,11,10,11,10,11,10,11,11,11,10,11,10,11,10,11,10,11,11,11,11],"n":["Data","as_c_ref","as_rust_ref","borrow","borrow_mut","clone","clone_into","data","deserialize","driver","f_get","f_get_copy","f_get_copy","f_get_mut","f_get_mut_ptr","f_get_ptr","f_replace","f_replace","f_swap","f_swap","fmt","from","function","hid","into","name","serialize","to_owned","try_from","try_into","type_id","Driver","DriverBox","DriverModule","DriverModuleRef","DriverModule_Prefix","Driver_CTO","Driver_TO","Driver_trait","as_c_ref","as_rust_ref","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","f_get","f_get","f_get","f_get","f_get_copy","f_get_copy","f_get_copy","f_get_copy","f_get_copy","f_get_copy","f_get_copy","f_get_copy","f_get_mut","f_get_mut","f_get_mut","f_get_mut","f_get_mut_ptr","f_get_mut_ptr","f_get_mut_ptr","f_get_mut_ptr","f_get_ptr","f_get_ptr","f_get_ptr","f_get_ptr","f_replace","f_replace","f_replace","f_replace","f_replace","f_replace","f_replace","f_replace","f_swap","f_swap","f_swap","f_swap","f_swap","f_swap","f_swap","f_swap","from","from","from","from","into","into","into","into","into_root_module_result","load_data","load_data","load_module","new_driver","new_driver","obj","poll","poll","root_module_statics","set","set","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","Driver","Driver_Backend","Driver_CTO","Driver_Interface","Driver_TO","NEW","borrow","borrow_mut","f_get","f_get_copy","f_get_copy","f_get_mut","f_get_mut_ptr","f_get_ptr","f_replace","f_replace","f_swap","f_swap","from","from_const","from_ptr","from_sabi","from_value","into","load_data","load_data","obj","poll","poll","sabi_reborrow","sabi_reborrow_mut","set","set","try_from","try_into","type_id","Function","FunctionBox","FunctionModule","FunctionModuleRef","FunctionModule_Prefix","Function_CTO","Function_TO","Function_trait","as_c_ref","as_rust_ref","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","event","event","f_get","f_get","f_get","f_get","f_get_copy","f_get_copy","f_get_copy","f_get_copy","f_get_copy","f_get_copy","f_get_copy","f_get_copy","f_get_mut","f_get_mut","f_get_mut","f_get_mut","f_get_mut_ptr","f_get_mut_ptr","f_get_mut_ptr","f_get_mut_ptr","f_get_ptr","f_get_ptr","f_get_ptr","f_get_ptr","f_replace","f_replace","f_replace","f_replace","f_replace","f_replace","f_replace","f_replace","f_swap","f_swap","f_swap","f_swap","f_swap","f_swap","f_swap","f_swap","from","from","from","from","into","into","into","into","into_root_module_result","load_data","load_data","load_module","new_function","new_function","obj","root_module_statics","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","Function","Function_Backend","Function_CTO","Function_Interface","Function_TO","NEW","borrow","borrow_mut","event","event","f_get","f_get_copy","f_get_copy","f_get_mut","f_get_mut_ptr","f_get_ptr","f_replace","f_replace","f_swap","f_swap","from","from_const","from_ptr","from_sabi","from_value","into","load_data","load_data","obj","sabi_reborrow","sabi_reborrow_mut","try_from","try_into","type_id","HID","HIDBox","HID_CTO","HID_TO","HID_trait","HidModule","HidModuleRef","HidModule_Prefix","as_c_ref","as_rust_ref","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","f_get","f_get","f_get","f_get","f_get_copy","f_get_copy","f_get_copy","f_get_copy","f_get_copy","f_get_copy","f_get_copy","f_get_copy","f_get_mut","f_get_mut","f_get_mut","f_get_mut","f_get_mut_ptr","f_get_mut_ptr","f_get_mut_ptr","f_get_mut_ptr","f_get_ptr","f_get_ptr","f_get_ptr","f_get_ptr","f_replace","f_replace","f_replace","f_replace","f_replace","f_replace","f_replace","f_replace","f_swap","f_swap","f_swap","f_swap","f_swap","f_swap","f_swap","f_swap","from","from","from","from","hold_button","hold_button","hold_key","hold_key","hold_modifier","hold_modifier","hold_special","hold_special","into","into","into","into","into_root_module_result","load_module","move_mouse_x","move_mouse_x","move_mouse_y","move_mouse_y","new_hid","new_hid","obj","press_basic_str","press_basic_str","press_str","press_str","release_button","release_button","release_key","release_key","release_modifier","release_modifier","release_special","release_special","root_module_statics","scroll_wheel","scroll_wheel","send_command","send_command","send_keyboard","send_keyboard","send_mouse","send_mouse","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","HID","HID_Backend","HID_CTO","HID_Interface","HID_TO","NEW","borrow","borrow_mut","f_get","f_get_copy","f_get_copy","f_get_mut","f_get_mut_ptr","f_get_ptr","f_replace","f_replace","f_swap","f_swap","from","from_const","from_ptr","from_sabi","from_value","hold_button","hold_button","hold_key","hold_key","hold_modifier","hold_modifier","hold_special","hold_special","into","move_mouse_x","move_mouse_x","move_mouse_y","move_mouse_y","obj","press_basic_str","press_basic_str","press_str","press_str","release_button","release_button","release_key","release_key","release_modifier","release_modifier","release_special","release_special","sabi_reborrow","sabi_reborrow_mut","scroll_wheel","scroll_wheel","send_command","send_command","send_keyboard","send_keyboard","send_mouse","send_mouse","try_from","try_into","type_id"],"q":["key_module","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","key_module::driver","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","key_module::driver::Driver_trait","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","key_module::function","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","key_module::function::Function_trait","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","key_module::hid","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","key_module::hid::HID_trait","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Config data passed from the key server to the module","","","","","","","User config data","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Type name","","","","","","Driver interface","","Driver module interface","This is the pointer to the prefix of  <code>DriverModule</code>.","This is the prefix fields of  <code>DriverModule</code>, accessible …","A type alias for the const-constructible <code>Driver_TO</code>.","The trait object for Driver.","This module is generated by the <code>#[sabi_trait]</code> attribute on …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Initialize new driver from key server config data Returns …","","Load from file","","Initialize driver interface","","Poll the current state of the driver with the specified id","","","","","","","","","","","","","","","","","","Driver interface","An alias for the underlying implementation of <code>Driver_TO</code>.","A type alias for the const-constructible <code>Driver_TO</code>.","A marker type describing the traits that are required when …","The trait object for Driver.","Constructs this type","","","","","","","","","","","","","Returns the argument unchanged.","Constructs this trait from a constant of a type that …","Constructs this trait object from a pointer to a type that …","Constructs this trait object from its underlying …","Constructs this trait from a type that implements <code>Driver</code>.","Calls <code>U::from(self)</code>.","Initialize new driver from key server config data Returns …","This is the inherent equivalent of the trait method of the …","","Poll the current state of the driver with the specified id","This is the inherent equivalent of the trait method of the …","Reborrows this trait object to a reference-based trait …","Reborrows this trait object to a mutable-reference-based …","","This is the inherent equivalent of the trait method of the …","","","","Function driver","","Function module interface","This is the pointer to the prefix of  <code>FunctionModule</code>.","This is the prefix fields of  <code>FunctionModule</code>, accessible …","A type alias for the const-constructible <code>Function_TO</code>.","The trait object for Function.","This module is generated by the <code>#[sabi_trait]</code> attribute on …","","","","","","","","","","","","","Keyboard pool event, runs every time the keyboard polls …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Initialize new function from key server config data …","","Load from file","","Initialize function interface","","","","","","","","","","","","","","","","Function driver","An alias for the underlying implementation of <code>Function_TO</code>.","A type alias for the const-constructible <code>Function_TO</code>.","A marker type describing the traits that are required when …","The trait object for Function.","Constructs this type","","","Keyboard pool event, runs every time the keyboard polls …","This is the inherent equivalent of the trait method of the …","","","","","","","","","","","Returns the argument unchanged.","Constructs this trait from a constant of a type that …","Constructs this trait object from a pointer to a type that …","Constructs this trait object from its underlying …","Constructs this trait from a type that implements <code>Function</code>.","Calls <code>U::from(self)</code>.","Initialize new function from key server config data …","This is the inherent equivalent of the trait method of the …","","Reborrows this trait object to a reference-based trait …","Reborrows this trait object to a mutable-reference-based …","","","","HID interface","","A type alias for the const-constructible <code>HID_TO</code>.","The trait object for HID.","This module is generated by the <code>#[sabi_trait]</code> attribute on …","HID module interface","This is the pointer to the prefix of  <code>HidModule</code>.","This is the prefix fields of  <code>HidModule</code>, accessible …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Load from file","","","","","","Initialize HID interface","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","HID interface","An alias for the underlying implementation of <code>HID_TO</code>.","A type alias for the const-constructible <code>HID_TO</code>.","A marker type describing the traits that are required when …","The trait object for HID.","Constructs this type","","","","","","","","","","","","","Returns the argument unchanged.","Constructs this trait from a constant of a type that …","Constructs this trait object from a pointer to a type that …","Constructs this trait object from its underlying …","Constructs this trait from a type that implements <code>HID</code>.","","This is the inherent equivalent of the trait method of the …","","This is the inherent equivalent of the trait method of the …","","This is the inherent equivalent of the trait method of the …","","This is the inherent equivalent of the trait method of the …","Calls <code>U::from(self)</code>.","","This is the inherent equivalent of the trait method of the …","","This is the inherent equivalent of the trait method of the …","","","This is the inherent equivalent of the trait method of the …","","This is the inherent equivalent of the trait method of the …","","This is the inherent equivalent of the trait method of the …","","This is the inherent equivalent of the trait method of the …","","This is the inherent equivalent of the trait method of the …","","This is the inherent equivalent of the trait method of the …","Reborrows this trait object to a reference-based trait …","Reborrows this trait object to a mutable-reference-based …","","This is the inherent equivalent of the trait method of the …","","This is the inherent equivalent of the trait method of the …","","This is the inherent equivalent of the trait method of the …","","This is the inherent equivalent of the trait method of the …","","",""],"i":[0,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,9,9,9,33,34,14,9,33,34,14,9,9,9,33,34,14,9,9,33,33,34,34,14,14,9,33,34,14,9,33,34,14,9,33,34,14,9,9,33,33,34,34,14,14,9,9,33,33,34,34,14,14,9,33,34,14,9,33,34,14,9,35,14,0,33,34,14,35,14,9,35,14,9,9,33,34,14,9,33,34,14,9,33,34,14,0,0,0,0,0,36,36,36,36,36,36,36,36,36,36,36,36,36,36,14,14,14,14,36,35,14,14,35,14,14,14,35,14,36,36,36,0,0,0,0,0,0,0,0,25,25,25,37,38,26,25,37,38,26,25,25,39,26,25,37,38,26,25,25,37,37,38,38,26,26,25,37,38,26,25,37,38,26,25,37,38,26,25,25,37,37,38,38,26,26,25,25,37,37,38,38,26,26,25,37,38,26,25,37,38,26,25,39,26,0,37,38,26,25,25,25,37,38,26,25,37,38,26,25,37,38,26,0,0,0,0,0,40,40,40,39,26,40,40,40,40,40,40,40,40,40,40,40,26,26,26,26,40,39,26,26,26,26,40,40,40,0,0,0,0,0,0,0,0,28,28,28,41,42,30,28,41,42,30,28,28,28,41,42,30,28,28,41,41,42,42,30,30,28,41,42,30,28,41,42,30,28,41,42,30,28,28,41,41,42,42,30,30,28,28,41,41,42,42,30,30,28,41,42,30,43,30,43,30,43,30,43,30,28,41,42,30,28,0,43,30,43,30,41,42,30,43,30,43,30,43,30,43,30,43,30,43,30,28,43,30,43,30,43,30,43,30,28,28,41,42,30,28,41,42,30,28,41,42,30,0,0,0,0,0,44,44,44,44,44,44,44,44,44,44,44,44,44,44,30,30,30,30,43,30,43,30,43,30,43,30,44,43,30,43,30,30,43,30,43,30,43,30,43,30,43,30,43,30,30,30,43,30,43,30,43,30,43,30,44,44,44],"f":[0,[[]],[[]],[[]],[[]],[1,1],[[]],0,[[],[[2,[1]]]],0,[[[4,[3]]]],[[[4,[5]]]],[[[4,[3]]]],[[[4,[3]]]],[4],[4],[[[4,[5]]]],[[[4,[3]]]],[[[4,[5]]]],[[[4,[3]]]],[[1,6],7],[[]],0,0,[[]],0,[1,2],[[]],[[],2],[[],2],[[],8],0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[9,9],[[]],[[[4,[3]]]],[[[4,[3]]]],[[[4,[3]]]],[[[4,[3]]]],[[[4,[5]]]],[[[4,[3]]]],[[[4,[3]]]],[[[4,[5]]]],[[[4,[3]]]],[[[4,[5]]]],[[[4,[3]]]],[[[4,[5]]]],[[[4,[3]]]],[[[4,[3]]]],[[[4,[3]]]],[[[4,[3]]]],[4],[4],[4],[4],[4],[4],[4],[4],[[[4,[5]]]],[[[4,[3]]]],[[[4,[3]]]],[[[4,[5]]]],[[[4,[3]]]],[[[4,[5]]]],[[[4,[5]]]],[[[4,[3]]]],[[[4,[5]]]],[[[4,[3]]]],[[[4,[5]]]],[[[4,[3]]]],[[[4,[5]]]],[[[4,[3]]]],[[[4,[5]]]],[[[4,[3]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[2,[10]]]],[11,[[13,[12,11]]]],[[14,11],[[13,[12,11]]]],[15,[[2,[9,16]]]],0,0,0,[12,[[13,[[18,[17]],11]]]],[[14,12],[[13,[[18,[17]],11]]]],[[],19],[[12,20,17],[[13,[11]]]],[[14,12,20,17],[[13,[11]]]],[[]],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],8],[[],8],[[],8],[[],8],0,0,0,0,0,0,[[]],[[]],[[[4,[3]]]],[[[4,[5]]]],[[[4,[3]]]],[[[4,[3]]]],[4],[4],[[[4,[3]]]],[[[4,[5]]]],[[[4,[5]]]],[[[4,[3]]]],[[]],[[],[[14,[21]]]],[[],14],[22,14],[[],[[14,[23]]]],[[]],[11,[[13,[12,11]]]],[[14,11],[[13,[12,11]]]],0,[12,[[13,[[18,[17]],11]]]],[[14,12],[[13,[[18,[17]],11]]]],[14,[[14,[21]]]],[14,[[14,[24]]]],[[12,20,17],[[13,[11]]]],[[14,12,20,17],[[13,[11]]]],[[],2],[[],2],[[],8],0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[25,25],[[]],[[12,17],[[13,[11]]]],[[26,12,17],[[13,[11]]]],[[[4,[3]]]],[[[4,[3]]]],[[[4,[3]]]],[[[4,[3]]]],[[[4,[5]]]],[[[4,[3]]]],[[[4,[5]]]],[[[4,[3]]]],[[[4,[5]]]],[[[4,[3]]]],[[[4,[5]]]],[[[4,[3]]]],[[[4,[3]]]],[[[4,[3]]]],[[[4,[3]]]],[[[4,[3]]]],[4],[4],[4],[4],[4],[4],[4],[4],[[[4,[5]]]],[[[4,[3]]]],[[[4,[5]]]],[[[4,[3]]]],[[[4,[3]]]],[[[4,[5]]]],[[[4,[3]]]],[[[4,[5]]]],[[[4,[3]]]],[[[4,[5]]]],[[[4,[5]]]],[[[4,[3]]]],[[[4,[3]]]],[[[4,[5]]]],[[[4,[3]]]],[[[4,[5]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[2,[10]]]],[1,[[13,[12,11]]]],[[26,1],[[13,[12,11]]]],[15,[[2,[25,16]]]],0,0,0,[[],19],[[]],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],8],[[],8],[[],8],[[],8],0,0,0,0,0,0,[[]],[[]],[[12,17],[[13,[11]]]],[[26,12,17],[[13,[11]]]],[[[4,[3]]]],[[[4,[3]]]],[[[4,[5]]]],[[[4,[3]]]],[4],[4],[[[4,[5]]]],[[[4,[3]]]],[[[4,[3]]]],[[[4,[5]]]],[[]],[[],[[26,[21]]]],[[],26],[27,26],[[],[[26,[23]]]],[[]],[1,[[13,[12,11]]]],[[26,1],[[13,[12,11]]]],0,[26,[[26,[21]]]],[26,[[26,[24]]]],[[],2],[[],2],[[],8],0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[28,28],[[]],[[[4,[3]]]],[[[4,[3]]]],[[[4,[3]]]],[[[4,[3]]]],[[[4,[3]]]],[[[4,[5]]]],[[[4,[3]]]],[[[4,[5]]]],[[[4,[3]]]],[[[4,[5]]]],[[[4,[5]]]],[[[4,[3]]]],[[[4,[3]]]],[[[4,[3]]]],[[[4,[3]]]],[[[4,[3]]]],[4],[4],[4],[4],[4],[4],[4],[4],[[[4,[5]]]],[[[4,[3]]]],[[[4,[3]]]],[[[4,[5]]]],[[[4,[3]]]],[[[4,[5]]]],[[[4,[3]]]],[[[4,[5]]]],[[[4,[3]]]],[[[4,[5]]]],[[[4,[3]]]],[[[4,[5]]]],[[[4,[3]]]],[[[4,[5]]]],[[[4,[3]]]],[[[4,[5]]]],[[]],[[]],[[]],[[]],[29],[[30,29]],[29],[[30,29]],[29],[[30,29]],[29],[[30,29]],[[]],[[]],[[]],[[]],[[],[[2,[10]]]],[15,[[2,[28,16]]]],[31],[[30,31]],[31],[[30,31]],0,0,0,[11],[[30,11]],[[11,11]],[[30,11,11]],[29],[[30,29]],[29],[[30,29]],[29],[[30,29]],[29],[[30,29]],[[],19],[31],[[30,31]],[11],[[30,11]],[[]],[30],[[]],[30],[[]],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],8],[[],8],[[],8],[[],8],0,0,0,0,0,0,[[]],[[]],[[[4,[3]]]],[[[4,[5]]]],[[[4,[3]]]],[[[4,[3]]]],[4],[4],[[[4,[5]]]],[[[4,[3]]]],[[[4,[5]]]],[[[4,[3]]]],[[]],[[],[[30,[21]]]],[[],30],[32,30],[[],[[30,[23]]]],[29],[[30,29]],[29],[[30,29]],[29],[[30,29]],[29],[[30,29]],[[]],[31],[[30,31]],[31],[[30,31]],0,[11],[[30,11]],[[11,11]],[[30,11,11]],[29],[[30,29]],[29],[[30,29]],[29],[[30,29]],[29],[[30,29]],[30,[[30,[21]]]],[30,[[30,[24]]]],[31],[[30,31]],[11],[[30,11]],[[]],[30],[[]],[30],[[],2],[[],2],[[],8]],"p":[[3,"Data"],[4,"Result"],[3,"Aligned"],[3,"FieldOffset"],[3,"Unaligned"],[3,"Formatter"],[6,"Result"],[3,"TypeId"],[3,"DriverModuleRef"],[4,"RootModuleError"],[3,"RString"],[15,"u64"],[4,"RResult"],[3,"Driver_TO"],[3,"Path"],[4,"LibraryError"],[15,"u16"],[3,"RVec"],[3,"RootModuleStatics"],[15,"usize"],[3,"RRef"],[6,"Driver_Backend"],[3,"RBox"],[3,"RMut"],[3,"FunctionModuleRef"],[3,"Function_TO"],[6,"Function_Backend"],[3,"HidModuleRef"],[15,"u32"],[3,"HID_TO"],[15,"i8"],[6,"HID_Backend"],[3,"DriverModule_Prefix"],[3,"DriverModule"],[8,"Driver"],[3,"Driver_Interface"],[3,"FunctionModule_Prefix"],[3,"FunctionModule"],[8,"Function"],[3,"Function_Interface"],[3,"HidModule_Prefix"],[3,"HidModule"],[8,"HID"],[3,"HID_Interface"]]},\
"key_rpc":{"doc":"Key-RPC","t":[13,3,4,4,13,3,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["AddLayer","Client","ClientError","Command","DownLayer","FallibleRet","GetLayer","GetVariable","IO","Layer","LayerIdx","NNG","NumLayers","RemoveLayer","Return","SaveLayout","SaveVariables","Serde","SetVariable","SwitchLayer","UpLayer","Variables","add_layer","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","deserialize","deserialize","down_layer","fmt","fmt","fmt","fmt","from","from","from","from","get_layer","get_variable","into","into","into","into","layer","layer_idx","new","num_layers","remove_layer","ret","save_layer","save_variables","serialize","serialize","set_variable","switch_layer","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","up_layer","variables"],"q":["key_rpc","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[5,0,0,0,5,0,5,5,3,5,5,3,5,5,3,5,5,3,5,5,5,5,1,1,3,5,6,1,3,5,6,5,6,1,3,3,5,6,1,3,5,6,1,1,1,3,5,6,1,1,1,1,1,6,1,1,5,6,1,1,3,1,3,5,6,1,3,5,6,1,3,5,6,1,1],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[1,2],[[4,[3]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[4,[5]]]],[[],[[4,[6]]]],[1,[[4,[3]]]],[[3,7],8],[[3,7],8],[[5,7],8],[[6,7],8],[[]],[[]],[[]],[[]],[[1,9],[[4,[2,3]]]],[[1,2],[[4,[2,3]]]],[[]],[[]],[[]],[[]],[1,[[4,[2,3]]]],[1,[[4,[2,3]]]],[10,[[4,[1,3]]]],[1,[[4,[9,3]]]],[[1,9],[[4,[3]]]],0,[1,[[4,[3]]]],[1,[[4,[3]]]],[5,4],[6,4],[[1,2,2],[[4,[3]]]],[[1,9],[[4,[3]]]],[[],2],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],11],[[],11],[[],11],[[],11],[1,[[4,[3]]]],[1,[[4,[[12,[2]],3]]]]],"p":[[3,"Client"],[3,"String"],[4,"ClientError"],[4,"Result"],[4,"Command"],[3,"FallibleRet"],[3,"Formatter"],[6,"Result"],[15,"usize"],[15,"str"],[3,"TypeId"],[3,"Vec"]]},\
"key_server":{"doc":"Key-Server WORK IN PROGRESS","t":[3,8,8,8,11,11,11,11,11,11,12,0,0,11,11,11,11,11,11,11,11,11,11,11,11,11,0,0,11,11,0,5,0,10,10,10,10,11,11,11,11,11,0,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,6,3,3,8,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,12,12,11,11,10,10,11,11,10,10,11,10,11,11,11,11,11,11,11,11,11,11,11,13,16,8,4,3,13,13,13,16,13,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,12,11,11,10,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,13,13,13,13,13,13,3,13,13,13,13,6,3,8,4,17,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,4,13,13,13,3,13,13,13,13,6,8,13,13,3,13,13,13,13,13,3,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,12,11,12,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,10,11,11,11,11,0,12,10,12,12,11,11,11,11,11,11,11,0,0,10,0,12,12,0,12,11,11,11,11,11,0,0,12,12,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,3,3,3,11,11,11,11,11,11,11,12,12,12,12,12,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,12,12,11,11,11,11,11,11,11,11,11,11,13,4,3,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,3,13,13,13,3,3,13,11,11,11,11,11,11,11,11,11,11,11,11,5,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,12,12,5,12,12,5,5,11,12,12,11,11,11,11,11,11,12,12,12,11,11,11,11,5,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,3,3,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,11,11,11,11,11,11,12,12,12,12,12,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,13,3,4,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,12,11,11,11,11,11,11,11,11,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,4,13,13,13,13,13,13,3,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,4,13,13,13,13,13,13,13,13,13,3,13,13,13,13,13,13,13,13,13,13,13,13,3,4,13,13,13,3,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,3,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,11,11,11,11,11,12,0,11,12,12,12,11,12,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,12,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,3,3,3,3,3,3,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,13,3,3,3,3,3,4,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,12,12,11,11,11,12,12,11,11,12,12,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,3,3,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,12,12,11,11,12,12,12,11,11,11,11,11,11,4,13,13,13,13,3,3,4,13,13,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,12,12,12,11,11,11,12,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,13,17,13,13,4,13,3,3,4,13,13,4,13,13,13,13,13,4,13,13,13,17,4,3,13,3,4,13,13,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,13,13,13,13,3,13,13,13,13,13,13,13,13,13,13,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,12,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,12,11,11,11,11,12,12,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,11,12,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,13,4,13,13,3,13,3,4,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12],"n":["Args","OrExit","OrLog","OrLogIgnore","augment_args","augment_args_for_update","borrow","borrow_mut","command","command_for_update","config","config_rpc","driver","f_get","f_get_copy","f_get_copy","f_get_mut","f_get_mut_ptr","f_get_ptr","f_replace","f_replace","f_swap","f_swap","from","from_arg_matches","from_arg_matches_mut","frontend","function","group_id","into","layout","main","modules","or_exit","or_exit_print","or_log","or_log_ignore","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut","variables","ConfigRPC","borrow","borrow_mut","f_get","f_get_copy","f_get_copy","f_get_mut","f_get_mut_ptr","f_get_ptr","f_replace","f_replace","f_swap","f_swap","from","into","start","try_from","try_into","type_id","Driver","DriverData","DriverError","DriverInterface","DriverManager","as_c_ref","as_rust_ref","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_any","clone_any_send","clone_any_send_sync","clone_any_sync","clone_into","data","deserialize","drivers","erased_serialize","f_get","f_get","f_get","f_get_copy","f_get_copy","f_get_copy","f_get_copy","f_get_copy","f_get_copy","f_get_mut","f_get_mut","f_get_mut","f_get_mut_ptr","f_get_mut_ptr","f_get_mut_ptr","f_get_ptr","f_get_ptr","f_get_ptr","f_replace","f_replace","f_replace","f_replace","f_replace","f_replace","f_swap","f_swap","f_swap","f_swap","f_swap","f_swap","fmt","fmt","fmt","from","from","from","get","get_mut","into","into","into","iter","load","module","msg","new","new","poll","poll_range","serialize","serialize","set","tick","tick","to_driver_data","to_owned","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","CommandPool","Error","FrontendConfig","FrontendConfigData","FrontendConfiguration","HID","MidiController","NanoMsg","Output","RPC","as_c_ref","as_rust_ref","borrow","borrow","borrow_mut","borrow_mut","clone","clone_any","clone_any_send","clone_any_send_sync","clone_any_sync","clone_into","configs","create_config","deserialize","eq","equivalent","erased_serialize","f_get","f_get","f_get_copy","f_get_copy","f_get_copy","f_get_copy","f_get_mut","f_get_mut","f_get_mut_ptr","f_get_mut_ptr","f_get_ptr","f_get_ptr","f_replace","f_replace","f_replace","f_replace","f_swap","f_swap","f_swap","f_swap","fmt","from","from","from_config","get","hash","insert","into","into","module_manager","new","serialize","to_config_data","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","back","front","keyboard","led","mouse","pub_addr","sub_addr","timeout","Bash","ComplexString","ComplexStringLn","ConstMove","ConstPitchBend","ConstScroll","Down","Down","Down","External","Flip","Function","FunctionBuilder","FunctionInterface","FunctionType","HALF_U16","ImmediateMove","ImmediateScroll","Instrument","Key","LeftClick","Log","Modifier","Move","NanoMsg","None","None","Note","Output","Pipe","PitchBend","ReturnCommand","RightClick","Scroll","SendHidCommand","Shift","Shift","Shift","Shortcut","Special","State","StateHelpers","String","StringLn","Switch","Switch","Switch","SwitchHid","ToggleHid","UnShift","Up","Up","Up","as_c_ref","as_rust_ref","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","clone","clone_any","clone_any_send","clone_any_send_sync","clone_any_sync","clone_into","cmd","command_pool","deserialize","driver_manager","erased_serialize","eval","event","event","event","event","event","f_get","f_get","f_get","f_get","f_get","f_get","f_get","f_get_copy","f_get_copy","f_get_copy","f_get_copy","f_get_copy","f_get_copy","f_get_copy","f_get_copy","f_get_copy","f_get_copy","f_get_copy","f_get_copy","f_get_copy","f_get_copy","f_get_mut","f_get_mut","f_get_mut","f_get_mut","f_get_mut","f_get_mut","f_get_mut","f_get_mut_ptr","f_get_mut_ptr","f_get_mut_ptr","f_get_mut_ptr","f_get_mut_ptr","f_get_mut_ptr","f_get_mut_ptr","f_get_ptr","f_get_ptr","f_get_ptr","f_get_ptr","f_get_ptr","f_get_ptr","f_get_ptr","f_replace","f_replace","f_replace","f_replace","f_replace","f_replace","f_replace","f_replace","f_replace","f_replace","f_replace","f_replace","f_replace","f_replace","f_swap","f_swap","f_swap","f_swap","f_swap","f_swap","f_swap","f_swap","f_swap","f_swap","f_swap","f_swap","f_swap","f_swap","falling","fmt","from","from","from","from","from","from","from","from_function","ftype","ftype","ftype","ftype","ftype","hid","hid","high","id","id","into","into","into","into","into","into","into","keyboard","log","low","midi","midi_controller","module_manager","mouse","nano_messenger","new","new","new","new","new","nng","output","prev_state","prev_state","rising","serialize","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","variables","amount","bend","channel","channel","channel","channel","command","dir","driver_data","driver_name","driver_name","format","func","idx","idx","instrument","invert","invert","invert","keys","layout","layout","modes","modifiers","module","name","name","note","period","period","scale","scale","scale","state","str","str","subtract","threshold","threshold","threshold","topic","velocity","x","x","y","y","Bash","CommandPool","Pipe","add_command","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","command","command","command_pool","command_pool","commands","event","event","exec","f_get","f_get","f_get","f_get_copy","f_get_copy","f_get_copy","f_get_copy","f_get_copy","f_get_copy","f_get_mut","f_get_mut","f_get_mut","f_get_mut_ptr","f_get_mut_ptr","f_get_mut_ptr","f_get_ptr","f_get_ptr","f_get_ptr","f_replace","f_replace","f_replace","f_replace","f_replace","f_replace","f_swap","f_swap","f_swap","f_swap","f_swap","f_swap","from","from","from","from_config","ftype","ftype","into","into","into","new","new","new","pipe","prev_state","prev_state","to_config_data","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","ChannelError","Command","HID","HIDError","HoldButton","HoldKey","HoldModifier","HoldSpecial","IO","MoveMouse","NoConfig","PressBasicStr","PressStr","ReleaseButton","ReleaseKey","ReleaseModifier","ReleaseSpecial","ScrollWheel","SendCommand","SendHidCommand","SendKeyboard","SendMouse","Switch","SwitchHid","ToggleHid","UInput","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","char_to_uinput","command","event","event","event","f_get","f_get","f_get","f_get","f_get","f_get","f_get_copy","f_get_copy","f_get_copy","f_get_copy","f_get_copy","f_get_copy","f_get_copy","f_get_copy","f_get_copy","f_get_copy","f_get_copy","f_get_copy","f_get_mut","f_get_mut","f_get_mut","f_get_mut","f_get_mut","f_get_mut","f_get_mut_ptr","f_get_mut_ptr","f_get_mut_ptr","f_get_mut_ptr","f_get_mut_ptr","f_get_mut_ptr","f_get_ptr","f_get_ptr","f_get_ptr","f_get_ptr","f_get_ptr","f_get_ptr","f_replace","f_replace","f_replace","f_replace","f_replace","f_replace","f_replace","f_replace","f_replace","f_replace","f_replace","f_replace","f_swap","f_swap","f_swap","f_swap","f_swap","f_swap","f_swap","f_swap","f_swap","f_swap","f_swap","f_swap","fmt","fmt","fmt","from","from","from","from","from","from","from_config","ftype","ftype","ftype","hid","hid","hid","hid_idx","hold_button","hold_key","hold_mod","hold_special","into","into","into","into","into","into","keyboard","led","mod_to_uinput","modes","mouse","mouse_button_to_mouse","mouse_dir_to_position","move_mouse","name","name","new","new","new","new","press_basic_string","press_string","prev_state","prev_state","prev_state","release_button","release_key","release_mod","release_special","requires_shift","scroll_wheel","send_command","send_keyboard","send_mouse","special_to_uinput","switch","to_config_data","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","tx","type_id","type_id","type_id","type_id","type_id","type_id","BasicString","ComplexString","Key","ModifierKey","Shortcut","Special","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","event","event","event","event","event","event","f_get","f_get","f_get","f_get","f_get","f_get","f_get_copy","f_get_copy","f_get_copy","f_get_copy","f_get_copy","f_get_copy","f_get_copy","f_get_copy","f_get_copy","f_get_copy","f_get_copy","f_get_copy","f_get_mut","f_get_mut","f_get_mut","f_get_mut","f_get_mut","f_get_mut","f_get_mut_ptr","f_get_mut_ptr","f_get_mut_ptr","f_get_mut_ptr","f_get_mut_ptr","f_get_mut_ptr","f_get_ptr","f_get_ptr","f_get_ptr","f_get_ptr","f_get_ptr","f_get_ptr","f_replace","f_replace","f_replace","f_replace","f_replace","f_replace","f_replace","f_replace","f_replace","f_replace","f_replace","f_replace","f_swap","f_swap","f_swap","f_swap","f_swap","f_swap","f_swap","f_swap","f_swap","f_swap","f_swap","f_swap","from","from","from","from","from","from","ftype","ftype","ftype","ftype","ftype","ftype","hid","hid","hid","hid","hid","hid","into","into","into","into","into","into","key","keys","layout","modifier","modifiers","new","new","new","new","new","new","prev_state","prev_state","prev_state","prev_state","prev_state","prev_state","special","string","string","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","Error","Info","Log","LogLevel","Warn","as_c_ref","as_rust_ref","borrow","borrow","borrow_mut","borrow_mut","clone","clone_any","clone_any_send","clone_any_send_sync","clone_any_sync","clone_into","deserialize","erased_serialize","event","f_get","f_get","f_get_copy","f_get_copy","f_get_copy","f_get_copy","f_get_mut","f_get_mut","f_get_mut_ptr","f_get_mut_ptr","f_get_ptr","f_get_ptr","f_replace","f_replace","f_replace","f_replace","f_swap","f_swap","f_swap","f_swap","fmt","from","from","ftype","into","into","log_level","msg","new","prev_state","serialize","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","Accordion","AcousticBass","AcousticGrandPiano","AcousticGuitarNylon","AcousticGuitarSteel","Agogo","AltoSax","Applause","Bagpipe","Banjo","BaritoneSax","Bassoon","BirdTweet","BlownBottle","BrassSection","BreathNoise","BrightAcousticPiano","Celesta","Cello","Ch1","Ch10","Ch11","Ch12","Ch13","Ch14","Ch15","Ch16","Ch2","Ch3","Ch4","Ch5","Ch6","Ch7","Ch8","Ch9","Channel","Channel","ChoirAahs","ChurchOrgan","Clarinet","Clavi","Connect","ConstPitchBend","Contrabass","DistortionGuitar","DrawbarOrgan","Dulcimer","ElectricBassFinger","ElectricBassPick","ElectricGrandPiano","ElectricGuitarClean","ElectricGuitarJazz","ElectricGuitarMuted","ElectricPiano1","ElectricPiano2","EnglishHorn","FX1","FX2","FX3","FX4","FX5","FX6","FX7","FX8","Fiddle","Flute","FrenchHorn","FretlessBass","GMSoundSet","Glockenspiel","GuitarFretNoise","GuitarHarmonics","Gunshot","Harmonica","Harpsichord","Helicopter","HonkytonkPiano","Init","Instrument","Kalimba","Koto","Lead1","Lead2","Lead3","Lead4","Lead5","Lead6","Lead7","Lead8","Marimba","MelodicTom","MidiController","MidiError","MusicBox","MutedTrumpet","NoPort","Note","Oboe","Ocarina","OrchestraHit","OrchestralHarp","OverdrivenGuitar","Pad1","Pad2","Pad3","Pad4","Pad5","Pad6","Pad7","Pad8","PanFlute","PercussiveOrgan","Piccolo","PitchBend","PizzicatoStrings","PortInfo","Recorder","ReedOrgan","ReverseCymbal","RockOrgan","Seashore","Send","Shakuhachi","Shamisen","Shanai","Sitar","SlapBass1","SlapBass2","SopranoSax","SteelDrums","StringEnsemble1","StringEnsemble2","SynthBass1","SynthBass2","SynthBrass1","SynthBrass2","SynthDrum","SynthStrings1","SynthStrings2","SynthVoice","TaikoDrum","TangoAccordion","TelephoneRing","TenorSax","Timpani","TinkleBell","TremoloStrings","Trombone","Trumpet","Tuba","TubularBells","Vibraphone","Viola","Violin","VoiceOohs","Whistle","Woodblock","Xylophone","as_c_ref","as_c_ref","as_rust_ref","as_rust_ref","bend","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","change_instrument","channel","channel","channel","channel","clone","clone","clone_any","clone_any","clone_any_send","clone_any_send","clone_any_send_sync","clone_any_send_sync","clone_any_sync","clone_any_sync","clone_into","clone_into","deserialize","deserialize","erased_serialize","erased_serialize","event","event","event","event","f_get","f_get","f_get","f_get","f_get","f_get","f_get","f_get","f_get_copy","f_get_copy","f_get_copy","f_get_copy","f_get_copy","f_get_copy","f_get_copy","f_get_copy","f_get_copy","f_get_copy","f_get_copy","f_get_copy","f_get_copy","f_get_copy","f_get_copy","f_get_copy","f_get_mut","f_get_mut","f_get_mut","f_get_mut","f_get_mut","f_get_mut","f_get_mut","f_get_mut","f_get_mut_ptr","f_get_mut_ptr","f_get_mut_ptr","f_get_mut_ptr","f_get_mut_ptr","f_get_mut_ptr","f_get_mut_ptr","f_get_mut_ptr","f_get_ptr","f_get_ptr","f_get_ptr","f_get_ptr","f_get_ptr","f_get_ptr","f_get_ptr","f_get_ptr","f_replace","f_replace","f_replace","f_replace","f_replace","f_replace","f_replace","f_replace","f_replace","f_replace","f_replace","f_replace","f_replace","f_replace","f_replace","f_replace","f_swap","f_swap","f_swap","f_swap","f_swap","f_swap","f_swap","f_swap","f_swap","f_swap","f_swap","f_swap","f_swap","f_swap","f_swap","f_swap","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from_config","ftype","ftype","ftype","ftype","get_last_bend","hold_note","instrument","into","into","into","into","into","into","into","into","into","into","invert","last_bend","midi_controller","midi_controller","midi_controller","midi_controller","new","new","new","new","new","note","note_param","pitch_bend","prev_state","prev_state","prev_state","release_note","scale","send_msg","serialize","serialize","threshold","to_config_data","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","tx","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","velocity","A0","A1","A2","A3","A4","A5","A6","A7","A8","AS0","AS1","AS2","AS3","AS4","AS5","AS6","AS7","AS8","AcousticBassDrum","AcousticSnare","B0","B1","B2","B3","B4","B5","B6","B7","B8","BassDrum1","C1","C2","C3","C4","C5","C6","C7","C8","C9","CS1","CS2","CS3","CS4","CS5","CS6","CS7","CS8","CS9","Cabasa","ChineseCymbal","Claves","ClosedHiHat","Cowbell","CrashCymbal1","CrashCymbal2","D1","D2","D3","D4","D5","D6","D7","D8","D9","DS1","DS2","DS3","DS4","DS5","DS6","DS7","DS8","DS9","E1","E2","E3","E4","E5","E6","E7","E8","E9","ElectricSnare","F1","F2","F3","F4","F5","F6","F7","F8","F9","FS1","FS2","FS3","FS4","FS5","FS6","FS7","FS8","FS9","Freq","G1","G2","G3","G4","G5","G6","G7","G8","G9","GS1","GS2","GS3","GS4","GS5","GS6","GS7","GS8","HandClap","HiBongo","HiMidTom","HiWoodBlock","HighAgogo","HighFloorTom","HighTimbale","HighTom","LongGuiro","LongWhistle","LowAgogo","LowBongo","LowConga","LowFloorTom","LowMidTom","LowTimbale","LowTom","LowWoodBlock","Maracas","MuteCuica","MuteHiConga","MuteTriangle","Note","OpenCuica","OpenHiConga","OpenHiHat","OpenTriangle","PedalHiHat","RideBell","RideCymbal1","RideCymbal2","ShortGuiro","ShortWhistle","SideStick","SplashCymbal","Tambourine","Vibraslap","_0","_1","_10","_11","_12","_13","_14","_15","_16","_17","_18","_19","_2","_20","_3","_4","_5","_6","_7","_8","_9","as_c_ref","as_rust_ref","borrow","borrow_mut","clone","clone_any","clone_any_send","clone_any_send_sync","clone_any_sync","clone_into","deserialize","erased_serialize","f_get","f_get_copy","f_get_copy","f_get_mut","f_get_mut_ptr","f_get_ptr","f_replace","f_replace","f_swap","f_swap","fmt","from","from_note","into","serialize","to_note","to_owned","try_from","try_into","type_id","ConstMove","ConstScroll","ImmediateMove","ImmediateScroll","LeftClick","Move","RightClick","Scroll","amount","amount","amount","amount","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","dir","event","event","event","event","event","event","event","event","f_get","f_get","f_get","f_get","f_get","f_get","f_get","f_get","f_get_copy","f_get_copy","f_get_copy","f_get_copy","f_get_copy","f_get_copy","f_get_copy","f_get_copy","f_get_copy","f_get_copy","f_get_copy","f_get_copy","f_get_copy","f_get_copy","f_get_copy","f_get_copy","f_get_mut","f_get_mut","f_get_mut","f_get_mut","f_get_mut","f_get_mut","f_get_mut","f_get_mut","f_get_mut_ptr","f_get_mut_ptr","f_get_mut_ptr","f_get_mut_ptr","f_get_mut_ptr","f_get_mut_ptr","f_get_mut_ptr","f_get_mut_ptr","f_get_ptr","f_get_ptr","f_get_ptr","f_get_ptr","f_get_ptr","f_get_ptr","f_get_ptr","f_get_ptr","f_replace","f_replace","f_replace","f_replace","f_replace","f_replace","f_replace","f_replace","f_replace","f_replace","f_replace","f_replace","f_replace","f_replace","f_replace","f_replace","f_swap","f_swap","f_swap","f_swap","f_swap","f_swap","f_swap","f_swap","f_swap","f_swap","f_swap","f_swap","f_swap","f_swap","f_swap","f_swap","from","from","from","from","from","from","from","from","ftype","ftype","ftype","ftype","ftype","ftype","ftype","ftype","hid","hid","hid","hid","hid","hid","hid","hid","into","into","into","into","into","into","into","into","invert","invert","new","new","new","new","new","new","new","new","period","period","prev_state","prev_state","prev_state","prev_state","prev_time","prev_time","scale","scale","subtract","threshold","threshold","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","ChannelError","Controller","DriverData","HashFormat","HashIter","NanoMessenger","NanoMsg","NanoMsgError","NoConfig","as_c_ref","as_rust_ref","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_any","clone_any_send","clone_any_send_sync","clone_any_sync","clone_into","connect","deserialize","device_connection","driver_data","driver_manager","erased_serialize","event","f_get","f_get","f_get","f_get","f_get","f_get","f_get_copy","f_get_copy","f_get_copy","f_get_copy","f_get_copy","f_get_copy","f_get_copy","f_get_copy","f_get_copy","f_get_copy","f_get_copy","f_get_copy","f_get_mut","f_get_mut","f_get_mut","f_get_mut","f_get_mut","f_get_mut","f_get_mut_ptr","f_get_mut_ptr","f_get_mut_ptr","f_get_mut_ptr","f_get_mut_ptr","f_get_mut_ptr","f_get_ptr","f_get_ptr","f_get_ptr","f_get_ptr","f_get_ptr","f_get_ptr","f_replace","f_replace","f_replace","f_replace","f_replace","f_replace","f_replace","f_replace","f_replace","f_replace","f_replace","f_replace","f_swap","f_swap","f_swap","f_swap","f_swap","f_swap","f_swap","f_swap","f_swap","f_swap","f_swap","f_swap","fmt","fmt","fmt","format","from","from","from","from","from","from","from_config","ftype","idx","into","into","into","into","into","into","into_iter","iter_args","name","nano_messenger","new","new","next","prev_state","pub_addr","send","serialize","sub_addr","timeout","to_config_data","to_owned","to_string","topic","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","tx","type_id","type_id","type_id","type_id","type_id","type_id","Flip","Output","borrow","borrow","borrow_mut","borrow_mut","driver_manager","driver_manager","event","event","f_get","f_get","f_get_copy","f_get_copy","f_get_copy","f_get_copy","f_get_mut","f_get_mut","f_get_mut_ptr","f_get_mut_ptr","f_get_ptr","f_get_ptr","f_replace","f_replace","f_replace","f_replace","f_swap","f_swap","f_swap","f_swap","from","from","ftype","ftype","idx","idx","into","into","name","name","new","new","prev_state","prev_state","state","try_from","try_from","try_into","try_into","type_id","type_id","Address","DriverAddr","DriverMatrix","InUse","InvalidSize","Layout","LayoutBuilder","LayoutError","None","OutsideBounds","add_layer","add_matrix","add_point","addresses","addresses","as_c_ref","as_rust_ref","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","clone","clone_any","clone_any_send","clone_any_send_sync","clone_any_sync","clone_into","cur_layer","curr_layer","deserialize","deserialize","down_layer","driver_manager","erased_serialize","erased_serialize","erased_serialize","f_get","f_get","f_get","f_get","f_get_copy","f_get_copy","f_get_copy","f_get_copy","f_get_copy","f_get_copy","f_get_copy","f_get_copy","f_get_mut","f_get_mut","f_get_mut","f_get_mut","f_get_mut_ptr","f_get_mut_ptr","f_get_mut_ptr","f_get_mut_ptr","f_get_ptr","f_get_ptr","f_get_ptr","f_get_ptr","f_replace","f_replace","f_replace","f_replace","f_replace","f_replace","f_replace","f_replace","f_swap","f_swap","f_swap","f_swap","f_swap","f_swap","f_swap","f_swap","fmt","fmt","fmt","from","from","from","from","function_builder","height","height","into","into","into","into","layer_len","layer_stack","layers","layout","layout_string","layout_string_at","new","none","num_layers","poll","remove_layer","serialize","serialize","serialize","shift","shift_from","switch_layer","tick","to_json","to_owned","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","unshift","up_layer","width","width","input","input","name","name","root","root","width","ABIStable","ABI_MODULE_FILE","Channel","Driver","DriverCommand","Event","ExternalDriver","ExternalFunction","FuncCommand","Function","HID","HidCommand","HoldButton","HoldKey","HoldModifier","HoldSpecial","IO","InterfaceType","LoadData","LoadData","LoadModule","META_FILE","ModError","Module","Module","ModuleManager","ModuleType","MoveMouse","NoSuchModule","PY_EVENT","PY_HOLD_BUTTON","PY_HOLD_KEY","PY_HOLD_MODIFIER","PY_HOLD_SPECIAL","PY_LOAD_DATA","PY_MODULE_FILE","PY_MOVE_MOUSE_X","PY_MOVE_MOUSE_Y","PY_POLL","PY_PRESS_BASIC_STR","PY_PRESS_STR","PY_RELEASE_BUTTON","PY_RELEASE_KEY","PY_RELEASE_MODIFIER","PY_RELEASE_SPECIAL","PY_SCROLL_WHEEL","PY_SEND_COMMAND","PY_SEND_KEYBOARD","PY_SEND_MOUSE","PY_SET","Parse","Poll","PressBasicStr","PressStr","Pyo3Result","Python","ReleaseButton","ReleaseKey","ReleaseModifier","ReleaseSpecial","ScrollWheel","SendCommand","SendKeyboard","SendMouse","Set","WrapResult","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","data","deref","deref_mut","deserialize","deserialize","deserialize","driver_modules","driver_poll","driver_set","erased_serialize","erased_serialize","erased_serialize","err","event","extract","extract","f_get","f_get","f_get","f_get","f_get","f_get","f_get","f_get","f_get","f_get","f_get","f_get","f_get_copy","f_get_copy","f_get_copy","f_get_copy","f_get_copy","f_get_copy","f_get_copy","f_get_copy","f_get_copy","f_get_copy","f_get_copy","f_get_copy","f_get_copy","f_get_copy","f_get_copy","f_get_copy","f_get_copy","f_get_copy","f_get_copy","f_get_copy","f_get_copy","f_get_copy","f_get_copy","f_get_copy","f_get_mut","f_get_mut","f_get_mut","f_get_mut","f_get_mut","f_get_mut","f_get_mut","f_get_mut","f_get_mut","f_get_mut","f_get_mut","f_get_mut","f_get_mut_ptr","f_get_mut_ptr","f_get_mut_ptr","f_get_mut_ptr","f_get_mut_ptr","f_get_mut_ptr","f_get_mut_ptr","f_get_mut_ptr","f_get_mut_ptr","f_get_mut_ptr","f_get_mut_ptr","f_get_mut_ptr","f_get_ptr","f_get_ptr","f_get_ptr","f_get_ptr","f_get_ptr","f_get_ptr","f_get_ptr","f_get_ptr","f_get_ptr","f_get_ptr","f_get_ptr","f_get_ptr","f_replace","f_replace","f_replace","f_replace","f_replace","f_replace","f_replace","f_replace","f_replace","f_replace","f_replace","f_replace","f_replace","f_replace","f_replace","f_replace","f_replace","f_replace","f_replace","f_replace","f_replace","f_replace","f_replace","f_replace","f_swap","f_swap","f_swap","f_swap","f_swap","f_swap","f_swap","f_swap","f_swap","f_swap","f_swap","f_swap","f_swap","f_swap","f_swap","f_swap","f_swap","f_swap","f_swap","f_swap","f_swap","f_swap","f_swap","f_swap","find_driver_module","find_function_module","find_hid_module","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","ftype","func","function_event","function_modules","hid_modules","hold_button","hold_key","hold_modifier","hold_special","id","id","init_abi_driver","init_abi_function","init_abi_hid","init_py_driver","init_py_function","init_py_hid","interface","into","into","into","into","into","into","into","into","into","into","into","into","into","is_hid","iter","load_driver","load_driver_module","load_function","load_function_module","load_hid_module","load_module","module_manager","module_manager","module_name","module_name","module_type","move_mouse","name","new","new","new","ok","poll","poll_range","press_basic_str","press_str","receive","release_button","release_key","release_modifier","release_special","scroll_wheel","send_command","send_keyboard","send_mouse","serialize","serialize","serialize","set","state","tick","to_driver_data","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","Const","Const","Data","Var","Var","VarDef","VarDef","Variable","VariableData","Variables","as_c_ref","as_c_ref","as_c_ref","as_c_ref","as_rust_ref","as_rust_ref","as_rust_ref","as_rust_ref","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_any","clone_any","clone_any","clone_any","clone_any_send","clone_any_send","clone_any_send","clone_any_send","clone_any_send_sync","clone_any_send_sync","clone_any_send_sync","clone_any_send_sync","clone_any_sync","clone_any_sync","clone_any_sync","clone_any_sync","clone_into","clone_into","clone_into","clone_into","create_many","data","data","data","default","deserialize","deserialize","erased_serialize","erased_serialize","f_get","f_get","f_get","f_get","f_get","f_get_copy","f_get_copy","f_get_copy","f_get_copy","f_get_copy","f_get_copy","f_get_copy","f_get_copy","f_get_copy","f_get_copy","f_get_mut","f_get_mut","f_get_mut","f_get_mut","f_get_mut","f_get_mut_ptr","f_get_mut_ptr","f_get_mut_ptr","f_get_mut_ptr","f_get_mut_ptr","f_get_ptr","f_get_ptr","f_get_ptr","f_get_ptr","f_get_ptr","f_replace","f_replace","f_replace","f_replace","f_replace","f_replace","f_replace","f_replace","f_replace","f_replace","f_swap","f_swap","f_swap","f_swap","f_swap","f_swap","f_swap","f_swap","f_swap","f_swap","fmt","fmt","from","from","from","from","from","from_data","get","into","into","into","into","into","into_data","into_variable","map","map","name","name","new","savable","serialize","serialize","set","to_json","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","update","variables","variables","default","name","data","name","updates"],"q":["key_server","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","key_server::config_rpc","","","","","","","","","","","","","","","","","","","key_server::driver","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","key_server::frontend","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","key_server::frontend::FrontendConfigData","","","","","","","","key_server::functionkey_server::function::FunctionType","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","key_server::function::cmd","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","key_server::function::hidkey_server::function::keyboard","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","key_server::function::log","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","key_server::function::midikey_server::function::midi::note_paramkey_server::function::mousekey_server::function::nng","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","key_server::function::output","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","key_server::layout","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","key_server::layout::Address","","","","","","","key_server::moduleskey_server::variables","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","key_server::variables::Data","","key_server::variables::VariableData","",""],"d":["Cli Args","Accepts a result or option. If a result it is turned into …","Turns a result into a option containing the ok value.  If …","Accepts a result or option. If a result it is turned into …","","","","","","","Path to config directory","Config rpc modules","Driver module","","","","","","","","","","","Returns the argument unchanged.","","","Frontend Config module","Function module","","Calls <code>U::from(self)</code>.","Layout module","","Plugin modules","","","","","","","","","","Variable module","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","Driver Object","Driver Type, used to serialize driver configs","Driver error","Driver interface","Driver Manager","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get a driver by name","Get a driver by name","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","State iterator","Load driver configurations from folder","","","New","","Poll a state","Poll a range of states","Serialize driver configuration to driver folder","","Output a state","Tick the driver. Used to update the driver state.","Tick drivers","Driver Type","","","","","","","","","","","","","","Function config interface, used to serialize function …","Function controller configuration data types, used for …","Function configuration, managers function controller …","","","","","","","","","","","","","","","","","","","Create new config data","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Get first configuration where matches returns true","","Insert configuration","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","New","","","","","","","","","","","","","","","","","","","","","","","","Down function","Down layout","","","","Function Object","Function builder","Function Interface","Function type, used for serializing functions","","","","","","","","","","","Return","","","","","","Function return type","","","","Shift function","Shift layout too","","","","","","","","Switch function","Switch layout","","","","","Up function","Up layout","","","","","","","","","","","","","","","","","","Build function","","","","","","","Command functions","","","","","Evaluation return","State poll event","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get type from function","Function Type","","","","","HID function controller","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Keyboard functions","Log functions","","Midi functions","","","Mouse functions","","New","New","New","New","New","NanoMsg functions","Output functions","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Bash Function, runs bash command","Command Pool, reaps spawn children","Pipe Function, pipes bash command into kout","Add command to pool","","","","","","","","","","","","","","Exec bash command","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","New","New","Exec bash command and pipe into kout (command will be …","","","","","","","","","","","","","Message passing error","Hid command for wrapped usb hid and uinput controller","HID controller","HID Error","","","","","IO error","","No configuration for HID","","","","","","","","","Send a command to a hid","","","","Switch hid mode","Toggle hid mode","UInput error","","","","","","","","","","","","","Usb keyboard to uinput","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Hold button","Hold key","Hold mod","Hold special","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Usb keyboard to uinput","","","Usb mouse to uinput","Usb mouse to uinput","Move mouse","","","new","new","new","New, requires path to usb hid interfaces","Type string (with default keyboard layout)","Press string resolving keys with a keyboard layout (uinput …","","","","Release button","Release key","Release mod","Release special","True if character requires shift to press","Scroll wheel","Send a command to a hid","Send key strokes to interface (does nothing for uinput)","Send mouse packets to interface (does nothing for uinput)","Usb keyboard to uinput","Switch hid controllers (uinput or usb hid)","","","","","","","","","","","","","","","","","","","","","","Basic String function, types a string","Complex string function, types a string based on a …","Key function (acts as normal key)","Modifier key function (acts as normal key)","Shortcut function, presses a key combination (will not …","Special Key function (acts as normal key)","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","New","New","New","New","New","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Log function, logs a message","Log level","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","New","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Midi channel","Message passing error","","","","","Cant connect to midi port","Const Pitch Bend, bend pitch by a constant amount when …","","","","","","","","","","","","","","","","","","","","","","","","","","Instrument","","","","","","","","","Midi init error","Instrument function, set instrument","","","","","","","","","","","","","Midi controller","Midi error","","","Couldn’t find port","Note function, play a note","","","","","","","","","","","","","","","","","Pitch Bend function, bend pitch based on state","","Error getting port info","","","","","","Can send midi packet","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Change instrument","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","Get last amount pitch bended","Hold note","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","New","New","New","New ","","","","Pitch bend","","","","Release note","","Send midi message","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Serializable note, used in config","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","From midi note","Calls <code>U::from(self)</code>.","","Convert to midi note","","","","","Const Move function, move the mouse a set amount whilst …","Const Scroll function, scroll the mouse a set amount …","Immediate Move function, move the mouse a set amount on …","Immediate Scroll function, scroll the mouse a set amount …","Left Click function","Move function, move the mouse in a direction based on the …","Right click function","Scroll function, move the scroll in a direction based on …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","New","New","New","New","New","New","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Message passing error","Controller error","Driver data to fetch for message","Dynamic hash formatter, format(“# bees”, 10) = “10 …","","Nano message controller ","NanoMsg function","NanoMsg Error","No configuration found","","","","","","","","","","","","","","","","","","","","","Create a client connection","","Create a device connection","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","New","New","","","","Send message","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Driver state address. Used to index a state/s of a driver","","","Tried to bind an address to an area of layout already bound","Address Matrix was of an invalid size","Layout","","Layout error","","Tried to bind an address outside the bounds of a layout","Add layer","Add a matrix of bind points","Add bind point","","","","","","","","","","","","","Build layout","","","","","","","","Remove layer","","","Move one layer down","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Number of layers","","","","Get string representing layout","","New","","Number of layers","Poll the layout states and call corresponding functions","Remove layer","","","","","","Switch layout","Tick drivers","","","","","","","","","","","","","","","","","Move one layer above","","","","","","","","","","abi_stable rust module","ABI Module file name","Message passing error","Driver interface","Driver Module commands","State poll event","Internal “External Driver” Interface","Internal “External Function” Interface","Function Module commands","Function interface","HID interface","HID Module commands","","","","","IO","Interface type","Load and init new driver from data","Load and init new driver from data","Error loading module","Module meta file name","Module Error","Module meta data","Internal module error","Module Manager","Module type","","No module found","Python load data function name","","","","","Python load data function name","Python module file name","","","Python poll function name","","","","","","","","","","","Python set function name","Meta parse error","Poll the state of the driver","","","Rust representation of explicit Python result object","python module","","","","","","","","","Set the state of the driver","Rust representation of lose Python result. Stores the data …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Poll a driver. Calls poll","Set a driver. Calls set","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Find driver module by name","Find function module by name","Find hid module by name","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Trigger function event. Calls event","","","","","","","","","Init abi driver","Init abi function","Init abi hid","Init python driver","Init python function","Init python hid","Interface type","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Load driver from data. Calls load_data","Load driver module","Load function from data. Calls load_data","Load function module","Load hid module","Load module","","","","","Module type","","Name of module","New","New","New","","","","","","Receive command respond from channel","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,6,6,6,6,6,6,6,0,0,6,6,6,6,6,6,6,6,6,6,6,6,6,0,0,6,6,0,0,0,147,147,148,149,6,6,6,6,6,0,0,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,0,0,0,0,0,21,21,31,28,21,31,28,21,21,21,21,21,21,21,21,21,31,21,31,28,21,31,31,28,28,21,21,31,28,21,31,28,21,31,28,21,31,31,28,28,21,21,31,31,28,28,21,21,28,28,21,31,28,21,31,31,31,28,21,36,31,21,28,31,28,36,36,31,21,36,36,31,36,21,28,31,28,21,31,28,21,31,28,21,42,151,0,0,0,42,42,42,151,42,42,42,45,42,45,42,42,42,42,42,42,42,45,45,42,42,42,42,45,42,45,45,42,42,45,42,45,42,45,42,45,45,42,42,45,45,42,42,42,45,42,151,45,42,45,45,42,45,45,42,151,42,45,42,45,42,45,42,152,152,153,153,153,154,154,154,47,47,47,47,47,47,0,49,47,47,47,0,0,0,0,0,47,47,47,47,47,47,47,47,47,49,47,47,47,47,47,0,47,47,47,0,49,47,47,47,0,0,47,47,0,49,47,47,47,49,0,49,47,47,47,49,46,50,51,52,53,47,49,46,50,51,52,53,47,46,47,47,47,47,47,47,0,46,47,46,47,49,48,50,51,52,53,49,46,50,51,52,53,47,49,49,46,46,50,50,51,51,52,52,53,53,47,47,49,46,50,51,52,53,47,49,46,50,51,52,53,47,49,46,50,51,52,53,47,49,49,46,46,50,50,51,51,52,52,53,53,47,47,49,49,46,46,50,50,51,51,52,52,53,53,47,47,155,47,49,46,50,51,52,53,47,47,48,50,51,52,53,0,46,155,52,53,49,46,50,51,52,53,47,0,0,155,0,46,46,0,46,46,50,51,52,53,0,0,52,53,155,47,47,49,46,50,51,52,53,47,49,46,50,51,52,53,47,49,46,50,51,52,53,47,46,156,157,158,157,159,160,161,162,163,164,165,163,166,164,165,160,162,167,159,168,169,170,171,168,166,172,161,158,156,167,162,167,159,164,169,170,162,162,167,159,163,158,173,174,173,174,0,0,0,56,56,60,61,56,60,61,60,61,60,61,56,60,61,0,56,60,61,56,56,60,60,61,61,56,60,61,56,60,61,56,60,61,56,56,60,60,61,61,56,56,60,60,61,61,56,60,61,56,60,61,56,60,61,56,60,61,0,60,61,56,56,60,61,56,60,61,56,60,61,68,0,0,0,69,69,69,69,68,69,68,69,69,69,69,69,69,69,69,0,69,69,69,0,0,68,65,66,67,54,68,69,65,66,67,54,68,69,0,65,65,66,67,65,66,67,54,68,69,65,65,66,66,67,67,54,54,68,68,69,69,65,66,67,54,68,69,65,66,67,54,68,69,65,66,67,54,68,69,65,65,66,66,67,67,54,54,68,68,69,69,65,65,66,66,67,67,54,54,68,68,69,69,68,68,69,65,66,67,54,68,69,54,65,66,67,65,66,67,67,54,54,54,54,65,66,67,54,68,69,54,54,0,67,54,0,0,54,65,66,65,66,67,54,54,54,65,66,67,54,54,54,54,0,54,54,54,54,0,54,54,68,65,66,67,54,68,69,65,66,67,54,68,69,54,65,66,67,54,68,69,0,0,0,0,0,0,78,79,80,81,82,83,78,79,80,81,82,83,78,79,80,81,82,83,78,79,80,81,82,83,78,78,79,79,80,80,81,81,82,82,83,83,78,79,80,81,82,83,78,79,80,81,82,83,78,79,80,81,82,83,78,78,79,79,80,80,81,81,82,82,83,83,78,78,79,79,80,80,81,81,82,82,83,83,78,79,80,81,82,83,78,79,80,81,82,83,78,79,80,81,82,83,78,79,80,81,82,83,78,83,82,80,83,78,79,80,81,82,83,78,79,80,81,82,83,79,81,82,78,79,80,81,82,83,78,79,80,81,82,83,78,79,80,81,82,83,85,85,0,0,85,85,85,86,85,86,85,85,85,85,85,85,85,85,85,86,86,85,86,86,85,85,86,85,86,85,86,85,86,86,85,85,86,86,85,85,85,86,85,86,86,85,86,86,86,86,85,85,86,85,86,85,86,85,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,0,89,91,91,91,91,89,0,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,0,91,91,91,91,91,91,91,91,89,0,91,91,91,91,91,91,91,91,91,91,91,91,0,0,91,91,89,0,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,0,91,89,91,91,91,91,91,89,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,90,91,90,91,93,55,92,93,94,95,89,90,91,55,92,93,94,95,89,90,91,55,92,93,94,95,90,91,90,91,90,91,90,91,90,91,90,91,90,91,90,91,92,93,94,95,55,92,93,94,95,89,90,91,55,55,92,92,93,93,94,94,95,95,89,89,90,90,91,91,55,92,93,94,95,89,90,91,55,92,93,94,95,89,90,91,55,92,93,94,95,89,90,91,55,55,92,92,93,93,94,94,95,95,89,89,90,90,91,91,55,55,92,92,93,93,94,94,95,95,89,89,90,90,91,91,89,89,90,91,55,92,93,94,95,89,90,90,91,91,55,92,93,94,95,55,55,95,55,92,93,94,95,89,90,90,91,91,94,55,92,93,94,95,55,92,93,94,95,92,0,55,92,93,95,55,94,55,90,91,94,55,90,91,89,55,92,93,94,95,89,90,91,55,92,93,94,95,89,90,91,55,55,92,93,94,95,89,90,91,92,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,0,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,0,0,0,0,0,0,0,0,100,101,102,103,100,101,102,103,104,105,106,107,100,101,102,103,104,105,106,107,104,100,101,102,103,104,105,106,107,100,101,102,103,104,105,106,107,100,100,101,101,102,102,103,103,104,104,105,105,106,106,107,107,100,101,102,103,104,105,106,107,100,101,102,103,104,105,106,107,100,101,102,103,104,105,106,107,100,100,101,101,102,102,103,103,104,104,105,105,106,106,107,107,100,100,101,101,102,102,103,103,104,104,105,105,106,106,107,107,100,101,102,103,104,105,106,107,100,101,102,103,104,105,106,107,100,101,102,103,104,105,106,107,100,101,102,103,104,105,106,107,104,105,100,101,102,103,104,105,106,107,103,105,100,101,106,107,103,105,104,105,104,104,105,100,101,102,103,104,105,106,107,100,101,102,103,104,105,106,107,100,101,102,103,104,105,106,107,114,114,0,0,0,0,0,0,114,110,110,115,118,57,113,114,110,115,118,57,113,114,110,110,110,110,110,110,110,57,110,57,113,113,110,113,115,118,57,113,114,110,115,115,118,118,57,57,113,113,114,114,110,110,115,118,57,113,114,110,115,118,57,113,114,110,115,118,57,113,114,110,115,115,118,118,57,57,113,113,114,114,110,110,115,115,118,118,57,57,113,113,114,114,110,110,114,114,110,113,115,118,57,113,114,110,57,113,110,115,118,57,113,114,110,118,115,110,113,57,113,118,113,57,57,110,57,57,57,110,114,113,115,118,57,113,114,110,115,118,57,113,114,110,57,115,118,57,113,114,110,0,0,119,120,119,120,119,120,119,120,119,120,119,119,120,120,119,120,119,120,119,120,119,119,120,120,119,119,120,120,119,120,119,120,119,120,119,120,119,120,119,120,119,120,119,119,120,119,120,119,120,0,123,123,121,121,0,0,0,123,121,14,122,122,122,14,123,123,122,14,123,121,122,14,123,121,122,123,123,123,123,123,123,14,14,122,123,14,14,122,14,123,122,14,123,121,122,122,14,14,123,123,121,121,122,14,123,121,122,14,123,121,122,14,123,121,122,122,14,14,123,123,121,121,122,122,14,14,123,123,121,121,123,121,121,122,14,123,121,14,122,14,122,14,123,121,14,14,122,122,14,14,122,122,14,14,14,122,14,123,14,14,14,14,14,123,121,122,14,123,121,122,14,123,121,122,14,123,121,14,14,122,14,175,176,175,176,175,176,175,126,0,128,125,0,135,0,0,0,125,125,0,134,134,134,134,128,0,135,136,128,0,0,0,128,0,0,134,128,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,128,136,134,134,0,126,134,134,134,134,134,134,134,134,136,0,129,137,124,35,125,126,127,128,134,135,136,132,129,137,124,35,125,126,127,128,134,135,136,132,137,124,124,125,126,127,35,35,35,125,126,127,132,129,124,132,129,137,124,35,125,126,127,128,134,135,136,132,129,129,137,137,124,124,35,35,125,125,126,126,127,127,128,128,134,134,135,135,136,136,132,132,129,137,124,35,125,126,127,128,134,135,136,132,129,137,124,35,125,126,127,128,134,135,136,132,129,137,124,35,125,126,127,128,134,135,136,132,129,129,137,137,124,124,35,35,125,125,126,126,127,127,128,128,134,134,135,135,136,136,132,132,129,129,137,137,124,124,35,35,125,125,126,126,127,127,128,128,134,134,135,135,136,136,132,132,35,35,35,125,126,127,128,128,134,135,136,129,137,124,35,125,126,127,128,134,135,136,132,129,129,35,35,35,35,35,35,35,129,137,35,35,35,35,35,35,127,129,137,124,124,35,125,126,127,128,134,135,136,132,35,137,35,35,35,35,35,35,129,137,129,137,127,35,127,129,137,35,132,137,137,35,35,35,35,35,35,35,35,35,35,35,125,126,127,137,137,137,137,128,129,137,124,35,125,126,127,128,134,135,136,132,129,137,124,35,125,126,127,128,134,135,136,132,129,137,124,35,125,126,127,128,134,135,136,132,141,142,0,141,142,0,142,0,0,0,141,58,142,143,141,58,142,143,18,141,58,142,143,18,141,58,142,143,141,58,142,143,141,58,142,143,141,58,142,143,141,58,142,143,141,58,142,143,141,58,142,143,18,58,18,58,143,142,143,142,143,18,141,58,142,143,18,18,141,141,58,58,142,142,143,143,18,141,58,142,143,18,141,58,142,143,18,141,58,142,143,18,18,141,141,58,58,142,142,143,143,18,18,141,141,58,58,142,142,143,143,142,143,18,141,58,142,143,58,18,18,141,58,142,143,58,142,58,142,58,143,18,18,142,143,18,18,141,58,142,143,18,141,58,142,143,18,141,58,142,143,18,141,58,142,143,18,18,58,177,177,178,178,178],"f":[0,0,0,0,[1,1],[1,1],[[]],[[]],[[],1],[[],1],0,0,0,[[[3,[2]]]],[[[3,[2]]]],[[[3,[4]]]],[[[3,[2]]]],[3],[3],[[[3,[2]]]],[[[3,[4]]]],[[[3,[4]]]],[[[3,[2]]]],[[]],[5,[[8,[6,7]]]],[5,[[8,[6,7]]]],0,0,[[],[[10,[9]]]],[[]],0,[[]],0,[11],[11],[11,10],[11,10],[[],8],[[],8],[[],12],[[6,5],[[8,[7]]]],[[6,5],[[8,[7]]]],0,0,[[]],[[]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[4]]]],[[[3,[2]]]],[3],[3],[[[3,[2]]]],[[[3,[4]]]],[[[3,[4]]]],[[[3,[2]]]],[[]],[[]],[[13,13,[16,[[15,[14]]]],17,[16,[[15,[18]]]],17],[[8,[19,20]]]],[[],8],[[],8],[[],12],0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[21,21],[[],[[24,[22,23]]]],[[],[[24,[22,23]]]],[[],[[24,[22,23]]]],[[],[[24,[22,23]]]],[[]],0,[[],[[8,[21]]]],0,[25,[[8,[26,27]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[4]]]],[[[3,[2]]]],[[[3,[4]]]],[[[3,[4]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[3],[3],[3],[3],[3],[3],[[[3,[4]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[4]]]],[[[3,[2]]]],[[[3,[4]]]],[[[3,[4]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[4]]]],[[[3,[2]]]],[[[3,[4]]]],[[28,29],30],[[28,29],30],[[21,29],30],[[]],[[]],[[]],[[31,11],[[10,[24]]]],[[31,11],[[10,[24]]]],[[]],[[]],[[]],[[],[[33,[32]]]],[[34,[16,[35]]],[[8,[31,28]]]],0,0,[[[37,[13,[24,[36]]]]],31],[13,28],[38,32],[39,10],[[31,34],[[8,[28]]]],[21,8],[[38,32],[[41,[[24,[40]]]]]],[[],[[41,[[24,[40]]]]]],[31],[[],21],[[]],[[],13],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],12],[[],12],[[],12],0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[42,42],[[],[[24,[22,23]]]],[[],[[24,[22,23]]]],[[],[[24,[22,23]]]],[[],[[24,[22,23]]]],[[]],0,[[],[[8,[13,43]]]],[[],[[8,[42]]]],[[42,42],44],[[],44],[25,[[8,[26,27]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[4]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[4]]]],[[[3,[2]]]],[[[3,[2]]]],[3],[3],[3],[3],[[[3,[4]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[4]]]],[[[3,[2]]]],[[[3,[4]]]],[[[3,[4]]]],[[[3,[2]]]],[[42,29],30],[[]],[[]],[45,[[41,[[24,[40]]]]]],[45,[[10,[42]]]],[42],[[45,42],44],[[]],[[]],0,[[11,[16,[35]]],[[8,[45,43]]]],[42,8],[[],42],[[]],[[],8],[[],8],[[],8],[[],8],[[],12],[[],12],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[46,47],[[10,[[24,[48]]]]]],[47,47],[[],[[24,[22,23]]]],[[],[[24,[22,23]]]],[[],[[24,[22,23]]]],[[],[[24,[22,23]]]],[[]],0,0,[[],[[8,[47]]]],0,[25,[[8,[26,27]]]],[[49,14]],[32,[[41,[[24,[40]]]]]],[[50,32],[[41,[[24,[40]]]]]],[[51,32],[[41,[[24,[40]]]]]],[[52,32],[[41,[[24,[40]]]]]],[[53,32],[[41,[[24,[40]]]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[4]]]],[[[3,[2]]]],[[[3,[4]]]],[[[3,[4]]]],[[[3,[2]]]],[[[3,[4]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[4]]]],[[[3,[2]]]],[[[3,[4]]]],[[[3,[2]]]],[[[3,[4]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[[[3,[4]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[4]]]],[[[3,[4]]]],[[[3,[2]]]],[[[3,[4]]]],[[[3,[2]]]],[[[3,[4]]]],[[[3,[2]]]],[[[3,[4]]]],[[[3,[2]]]],[[[3,[4]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[4]]]],[[[3,[2]]]],[[[3,[4]]]],[[[3,[2]]]],[[[3,[4]]]],[[[3,[2]]]],[[[3,[4]]]],[[[3,[4]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[4]]]],[[[3,[2]]]],[[[3,[4]]]],[[],44],[[47,29],30],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[10,47],[[],47],[50,47],[51,47],[52,47],[53,47],0,0,[[],44],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[],44],0,0,0,0,0,[[[16,[[15,[54]]]],[16,[[15,[55]]]],[16,[[15,[56]]]],[16,[[15,[31]]]],[16,[[15,[57]]]],[16,[35]],[16,[[15,[18]]]]],[[16,[[15,[46]]]]]],[[],[[10,[[24,[48]]]]]],[[],[[10,[[24,[48]]]]]],[[[58,[38]]],[[10,[[24,[48]]]]]],[[[58,[38]]],[[10,[[24,[48]]]]]],0,0,0,0,[[],44],[47,8],[[]],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[56,59]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,[[60,32],[[41,[[24,[40]]]]]],[[61,32],[[41,[[24,[40]]]]]],[[11,16]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[4]]]],[[[3,[4]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[4]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[3],[3],[3],[3],[3],[3],[[[3,[2]]]],[[[3,[4]]]],[[[3,[2]]]],[[[3,[4]]]],[[[3,[4]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[4]]]],[[[3,[4]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[4]]]],[[]],[[]],[[]],[45,[[41,[[24,[40]]]]]],[60,47],[61,47],[[]],[[]],[[]],[[],[[62,[[16,[[15,[56]]]]]]]],[[[58,[13]],[16,[[15,[56]]]]],[[10,[[24,[48]]]]]],[[[58,[13]],[16,[[15,[56]]]]],[[10,[[24,[48]]]]]],[[11,16]],0,0,[56,42],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],12],[[],12],[[],12],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[63,[[10,[64]]]],0,[[65,32],[[41,[[24,[40]]]]]],[[66,32],[[41,[[24,[40]]]]]],[[67,32],[[41,[[24,[40]]]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[4]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[4]]]],[[[3,[2]]]],[[[3,[4]]]],[[[3,[2]]]],[[[3,[4]]]],[[[3,[2]]]],[[[3,[4]]]],[[[3,[2]]]],[[[3,[4]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[[[3,[4]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[4]]]],[[[3,[4]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[4]]]],[[[3,[4]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[4]]]],[[[3,[2]]]],[[[3,[4]]]],[[[3,[4]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[4]]]],[[[3,[2]]]],[[[3,[4]]]],[[[3,[2]]]],[[[3,[4]]]],[[[3,[2]]]],[[[3,[4]]]],[[68,29],30],[[68,29],30],[[69,29],30],[[]],[[]],[[]],[[]],[[]],[[]],[45,[[41,[[24,[40]]]]]],[65,47],[66,47],[67,47],0,0,0,0,[[54,70]],[[54,63]],[[54,71]],[[54,72]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[71,[[10,[64]]]],0,0,[70,73],[74,75],[[54,76,74]],0,0,[[[58,[13]],[58,[13]],[16,[[15,[54]]]]],[[10,[[24,[48]]]]]],[[[58,[13]],[16,[[15,[54]]]]],[[10,[[24,[48]]]]]],[[[58,[[77,[13]]]],[16,[[15,[54]]]]],[[10,[[24,[48]]]]]],[[13,13,13,[16,[35]]],[[8,[[16,[[15,[54]]]],68]]]],[[54,11]],[[54,11,11]],0,0,0,[[54,70]],[[54,63]],[[54,71]],[[54,72]],[63,44],[[54,76]],[[54,13,13]],[54],[54],[72,[[10,[64]]]],[[54,13]],[54,42],[[],13],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],0,[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[78,32],[[41,[[24,[40]]]]]],[[79,32],[[41,[[24,[40]]]]]],[[80,32],[[41,[[24,[40]]]]]],[[81,32],[[41,[[24,[40]]]]]],[[82,32],[[41,[[24,[40]]]]]],[[83,32],[[41,[[24,[40]]]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[4]]]],[[[3,[4]]]],[[[3,[2]]]],[[[3,[4]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[4]]]],[[[3,[4]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[4]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[[[3,[2]]]],[[[3,[4]]]],[[[3,[2]]]],[[[3,[4]]]],[[[3,[4]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[4]]]],[[[3,[2]]]],[[[3,[4]]]],[[[3,[4]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[4]]]],[[[3,[2]]]],[[[3,[4]]]],[[[3,[4]]]],[[[3,[2]]]],[[[3,[4]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[4]]]],[[[3,[2]]]],[[[3,[4]]]],[[]],[[]],[[]],[[]],[[]],[[]],[78,47],[79,47],[80,47],[81,47],[82,47],[83,47],0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,[[63,[16,[[15,[54]]]]],[[10,[[24,[48]]]]]],[[72,[16,[[15,[54]]]]],[[10,[[24,[48]]]]]],[[71,[16,[[15,[54]]]]],[[10,[[24,[48]]]]]],[[[58,[13]],44,[16,[[15,[54]]]]],[[10,[[24,[48]]]]]],[[[58,[13]],44,[58,[13]],[16,[[15,[54]]]]],[[10,[[24,[48]]]]]],[[[77,[71]],[77,[84]],[16,[[15,[54]]]]],[[10,[[24,[48]]]]]],0,0,0,0,0,0,0,0,0,[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[85,85],[[],[[24,[22,23]]]],[[],[[24,[22,23]]]],[[],[[24,[22,23]]]],[[],[[24,[22,23]]]],[[]],[[],[[8,[85]]]],[25,[[8,[26,27]]]],[[86,32],[[41,[[24,[40]]]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[4]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[4]]]],[[[3,[2]]]],[[[3,[2]]]],[3],[3],[3],[3],[[[3,[4]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[4]]]],[[[3,[4]]]],[[[3,[2]]]],[[[3,[4]]]],[[[3,[2]]]],[[85,29],30],[[]],[[]],[86,47],[[]],[[]],0,0,[[[58,[85]],[58,[13]]],[[10,[[24,[48]]]]]],0,[85,8],[[]],[[],8],[[],8],[[],8],[[],8],[[],12],[[],12],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[55,87,88],[[8,[89]]]],0,0,0,0,[90,90],[91,91],[[],[[24,[22,23]]]],[[],[[24,[22,23]]]],[[],[[24,[22,23]]]],[[],[[24,[22,23]]]],[[],[[24,[22,23]]]],[[],[[24,[22,23]]]],[[],[[24,[22,23]]]],[[],[[24,[22,23]]]],[[]],[[]],[[],[[8,[90]]]],[[],[[8,[91]]]],[25,[[8,[26,27]]]],[25,[[8,[26,27]]]],[[92,32],[[41,[[24,[40]]]]]],[[93,32],[[41,[[24,[40]]]]]],[[94,32],[[41,[[24,[40]]]]]],[[95,32],[[41,[[24,[40]]]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[4]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[4]]]],[[[3,[4]]]],[[[3,[2]]]],[[[3,[4]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[4]]]],[[[3,[2]]]],[[[3,[4]]]],[[[3,[4]]]],[[[3,[2]]]],[[[3,[4]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[[[3,[2]]]],[[[3,[4]]]],[[[3,[4]]]],[[[3,[2]]]],[[[3,[4]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[4]]]],[[[3,[4]]]],[[[3,[2]]]],[[[3,[4]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[4]]]],[[[3,[2]]]],[[[3,[4]]]],[[[3,[4]]]],[[[3,[2]]]],[[[3,[4]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[4]]]],[[[3,[2]]]],[[[3,[4]]]],[[[3,[4]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[4]]]],[[[3,[4]]]],[[[3,[2]]]],[[[3,[4]]]],[[[3,[2]]]],[[89,29],30],[[89,29],30],[[90,29],30],[[91,29],30],[[]],[[]],[[]],[[]],[[]],[[]],[87,90],[[]],[88,91],[[]],[45,[[41,[[24,[40]]]]]],[92,47],[93,47],[94,47],[95,47],[55,[[10,[32]]]],[[55,87,96,96],[[8,[89]]]],0,[[]],[[]],[[]],[[]],[[]],[[]],[90,87],[[]],[[]],[91,88],0,0,0,0,0,0,[[],[[8,[[16,[[15,[55]]]],89]]]],[[[58,[90]],[58,[97]],[58,[96]],[16,[[15,[55]]]]],[[10,[[24,[48]]]]]],[[[58,[90]],[58,[32]],[16,[[15,[55]]]]],[[10,[[24,[48]]]]]],[[[58,[90]],[58,[44]],[58,[32]],[58,[98]],[16,[[15,[55]]]]],[[10,[[24,[48]]]]]],[[[58,[90]],[58,[91]],[16,[[15,[55]]]]],[[10,[[24,[48]]]]]],0,0,[[55,87,32],[[8,[89]]]],0,0,0,[[55,87,96,96],[[8,[89]]]],0,[[55,99],[[8,[89]]]],[90,8],[91,8],0,[55,42],[[]],[[]],[[],13],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],0,[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[97,97],[[],[[24,[22,23]]]],[[],[[24,[22,23]]]],[[],[[24,[22,23]]]],[[],[[24,[22,23]]]],[[]],[[],[[8,[97]]]],[25,[[8,[26,27]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[4]]]],[[[3,[2]]]],[3],[3],[[[3,[4]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[4]]]],[[97,29],30],[[]],[96,97],[[]],[97,8],[97,96],[[]],[[],8],[[],8],[[],12],0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[100,32],[[41,[[24,[40]]]]]],[[101,32],[[41,[[24,[40]]]]]],[[102,32],[[41,[[24,[40]]]]]],[[103,32],[[41,[[24,[40]]]]]],[[104,32],[[41,[[24,[40]]]]]],[[105,32],[[41,[[24,[40]]]]]],[[106,32],[[41,[[24,[40]]]]]],[[107,32],[[41,[[24,[40]]]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[4]]]],[[[3,[4]]]],[[[3,[2]]]],[[[3,[4]]]],[[[3,[2]]]],[[[3,[4]]]],[[[3,[2]]]],[[[3,[4]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[4]]]],[[[3,[4]]]],[[[3,[2]]]],[[[3,[4]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[[[3,[4]]]],[[[3,[2]]]],[[[3,[4]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[4]]]],[[[3,[4]]]],[[[3,[2]]]],[[[3,[4]]]],[[[3,[2]]]],[[[3,[4]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[4]]]],[[[3,[2]]]],[[[3,[4]]]],[[[3,[2]]]],[[[3,[4]]]],[[[3,[2]]]],[[[3,[4]]]],[[[3,[4]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[4]]]],[[[3,[4]]]],[[[3,[2]]]],[[[3,[4]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[4]]]],[[[3,[4]]]],[[[3,[2]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[100,47],[101,47],[102,47],[103,47],[104,47],[105,47],[106,47],[107,47],0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[[58,[76]],[58,[76]],[16,[[15,[54]]]]],[[10,[[24,[48]]]]]],[[[58,[76]],[16,[[15,[54]]]]],[[10,[[24,[48]]]]]],[[[58,[76]],[58,[76]],[16,[[15,[54]]]]],[[10,[[24,[48]]]]]],[[[58,[76]],[58,[108]],[16,[[15,[54]]]]],[[10,[[24,[48]]]]]],[[74,[58,[44]],[58,[109]],[58,[98]],[58,[98]],[16,[[15,[54]]]]],[[10,[[24,[48]]]]]],[[[58,[108]],[58,[44]],[58,[32]],[58,[98]],[16,[[15,[54]]]]],[[10,[[24,[48]]]]]],[[[16,[[15,[54]]]]],[[10,[[24,[48]]]]]],[[[16,[[15,[54]]]]],[[10,[[24,[48]]]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[110,110],[[],[[24,[22,23]]]],[[],[[24,[22,23]]]],[[],[[24,[22,23]]]],[[],[[24,[22,23]]]],[[]],[[11,111],112],[[],[[8,[110]]]],[[11,111],112],0,0,[25,[[8,[26,27]]]],[[113,32],[[41,[[24,[40]]]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[4]]]],[[[3,[2]]]],[[[3,[4]]]],[[[3,[2]]]],[[[3,[4]]]],[[[3,[2]]]],[[[3,[4]]]],[[[3,[4]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[4]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[[[3,[4]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[4]]]],[[[3,[4]]]],[[[3,[2]]]],[[[3,[4]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[4]]]],[[[3,[2]]]],[[[3,[4]]]],[[[3,[4]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[4]]]],[[[3,[2]]]],[[[3,[4]]]],[[[3,[2]]]],[[[3,[4]]]],[[[3,[4]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[4]]]],[[114,29],30],[[114,29],30],[[110,29],30],0,[[]],[[]],[[]],[[]],[[]],[[]],[45,[[41,[[24,[40]]]]]],[113,47],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[115,11],[[8,[116]]]],0,0,[[13,13,117],[[8,[[16,[[15,[57]]]],114]]]],[[96,13,[77,[110]],[16,[[15,[57]]]],[16,[[15,[31]]]]],[[10,[[24,[48]]]]]],[118,10],0,0,[[57,[77,[96]]]],[110,8],0,0,[57,42],[[]],[[],13],0,[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],0,[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],0,0,[[]],[[]],[[]],[[]],0,0,[[119,32],[[41,[[24,[40]]]]]],[[120,32],[[41,[[24,[40]]]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[4]]]],[[[3,[4]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[3],[3],[3],[3],[[[3,[4]]]],[[[3,[2]]]],[[[3,[4]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[4]]]],[[[3,[4]]]],[[[3,[2]]]],[[]],[[]],[119,47],[120,47],0,0,[[]],[[]],0,0,[[13,[58,[38]],[58,[32]],[16,[[15,[31]]]]],[[10,[[24,[48]]]]]],[[13,[58,[38]],[16,[[15,[31]]]]],[[10,[[24,[48]]]]]],0,0,0,[[],8],[[],8],[[],8],[[],8],[[],12],[[],12],0,0,0,0,0,0,0,0,0,0,[[14,[77,[[77,[47]]]],38],[[8,[38,121]]]],[[122,11,[39,[38]],38],[[8,[121]]]],[[122,11,38],[[8,[121]]]],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[122,[16,[[15,[31]]]],[16,[[15,[46]]]]],[[16,[[15,[14]]]]]],[123,123],[[],[[24,[22,23]]]],[[],[[24,[22,23]]]],[[],[[24,[22,23]]]],[[],[[24,[22,23]]]],[[]],0,[14,38],[[],[[8,[122]]]],[[],[[8,[123]]]],[14,10],0,[25,[[8,[26,27]]]],[25,[[8,[26,27]]]],[25,[[8,[26,27]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[4]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[4]]]],[[[3,[4]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[4]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[3],[3],[3],[3],[3],[3],[3],[3],[[[3,[4]]]],[[[3,[2]]]],[[[3,[4]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[4]]]],[[[3,[4]]]],[[[3,[2]]]],[[[3,[4]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[4]]]],[[[3,[2]]]],[[[3,[4]]]],[[[3,[4]]]],[[[3,[2]]]],[[123,29],30],[[121,29],30],[[121,29],30],[[]],[[]],[[]],[[]],0,0,0,[[]],[[]],[[]],[[]],[14,38],0,0,0,[14,[[10,[13]]]],[[14,38],[[10,[13]]]],[[38,38],122],0,[14,38],[14],[[14,38],[[10,[[77,[[10,[[24,[48]]]]]]]]]],[122,8],[14,8],[123,8],[[14,38],10],0,[[14,38],10],[14],[14,[[8,[13,43]]]],[[]],[[],13],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],12],[[],12],[[],12],[[],12],[[14,38],10],[14,10],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[124],[124],[[],[[8,[125]]]],[[],[[8,[126]]]],[[],[[8,[127]]]],0,[[35,11,108],[[8,[[77,[32]],128]]]],[[35,11,108,38,32],[[8,[128]]]],[25,[[8,[26,27]]]],[25,[[8,[26,27]]]],[25,[[8,[26,27]]]],0,[[129,32],[[41,[[24,[40]]]]]],[130,[[131,[124]]]],[130,[[131,[132]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[4]]]],[[[3,[2]]]],[[[3,[4]]]],[[[3,[4]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[4]]]],[[[3,[2]]]],[[[3,[4]]]],[[[3,[2]]]],[[[3,[4]]]],[[[3,[2]]]],[[[3,[4]]]],[[[3,[4]]]],[[[3,[2]]]],[[[3,[4]]]],[[[3,[2]]]],[[[3,[4]]]],[[[3,[2]]]],[[[3,[4]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[4]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[[[3,[4]]]],[[[3,[2]]]],[[[3,[4]]]],[[[3,[2]]]],[[[3,[4]]]],[[[3,[2]]]],[[[3,[4]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[4]]]],[[[3,[4]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[4]]]],[[[3,[4]]]],[[[3,[2]]]],[[[3,[4]]]],[[[3,[2]]]],[[[3,[4]]]],[[[3,[2]]]],[[[3,[4]]]],[[[3,[2]]]],[[[3,[4]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[4]]]],[[[3,[4]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[4]]]],[[[3,[2]]]],[[[3,[4]]]],[[[3,[4]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[4]]]],[[[3,[4]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[4]]]],[[[3,[4]]]],[[[3,[2]]]],[[[3,[4]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[4]]]],[[[3,[4]]]],[[[3,[2]]]],[[35,11],[[8,[133,128]]]],[[35,11],[[8,[133,128]]]],[[35,11],[[8,[133,128]]]],[[125,29],30],[[126,29],30],[[127,29],30],[[128,29],30],[[128,29],30],[[134,29],30],[[135,29],30],[[136,29],30],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[129,47],0,[[35,11,108,32],[[8,[128]]]],0,0,[[35,11,70],[[8,[128]]]],[[35,11,63],[[8,[128]]]],[[35,11,71],[[8,[128]]]],[[35,11,72],[[8,[128]]]],0,0,[17,[[8,[[133,[136]],128]]]],[17,[[8,[[133,[135]],128]]]],[17,[[8,[[133,[134]],128]]]],[17,[[8,[[133,[136]],128]]]],[17,[[8,[[133,[135]],128]]]],[17,[[8,[[133,[134]],128]]]],0,[[]],[[]],[[]],[124,8],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[35,11],44],[137,[[33,[32]]]],[[35,11,13],[[8,[108,128]]]],[[35,17,127],[[8,[128]]]],[[35,11,138],[[8,[108,128]]]],[[35,17,127],[[8,[128]]]],[[35,17,127],[[8,[128]]]],[[35,17],[[8,[128]]]],0,0,0,0,0,[[35,11,76,74],[[8,[128]]]],0,[[13,[16,[35]],138],[[10,[[24,[48]]]]]],[[13,13,[16,[35]]],[[8,[[24,[36]],28]]]],[17,[[8,[[16,[35]],128]]]],0,[[137,38],32],[[137,39],10],[[35,11,13],[[8,[128]]]],[[35,11,13,13],[[8,[128]]]],[[[139,[[8,[13]]]]],[[8,[128]]]],[[35,11,70],[[8,[128]]]],[[35,11,63],[[8,[128]]]],[[35,11,71],[[8,[128]]]],[[35,11,72],[[8,[128]]]],[[35,11,76],[[8,[128]]]],[[35,11,13],[[8,[128]]]],[[35,11],[[8,[128]]]],[[35,11],[[8,[128]]]],[125,8],[126,8],[127,8],[[137,38,32],[[41,[[24,[40]]]]]],0,[137,[[41,[[24,[40]]]]]],[137,21],[[],13],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[141,[140]]],[[141,[140]]]],[[[58,[140]]],[[58,[140]]]],[[[142,[140]]],[[142,[140]]]],[143,143],[[],[[24,[22,23]]]],[[],[[24,[22,23]]]],[[],[[24,[22,23]]]],[[],[[24,[22,23]]]],[[],[[24,[22,23]]]],[[],[[24,[22,23]]]],[[],[[24,[22,23]]]],[[],[[24,[22,23]]]],[[],[[24,[22,23]]]],[[],[[24,[22,23]]]],[[],[[24,[22,23]]]],[[],[[24,[22,23]]]],[[],[[24,[22,23]]]],[[],[[24,[22,23]]]],[[],[[24,[22,23]]]],[[],[[24,[22,23]]]],[[]],[[]],[[]],[[]],[[18,[77,[143]]]],[58],0,0,0,[[],[[8,[142]]]],[[],[[8,[143]]]],[25,[[8,[26,27]]]],[25,[[8,[26,27]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[4]]]],[[[3,[4]]]],[[[3,[2]]]],[[[3,[4]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[4]]]],[[[3,[2]]]],[[[3,[4]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[[[3,[4]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[4]]]],[[[3,[4]]]],[[[3,[2]]]],[[[3,[4]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[4]]]],[[[3,[4]]]],[[[3,[2]]]],[[[3,[4]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[4]]]],[[[3,[2]]]],[[[3,[4]]]],[[[3,[4]]]],[[[3,[2]]]],[[[142,[144]],29],30],[[143,29],30],[[]],[[]],[[]],[[]],[[]],[[142,[16,[[15,[18]]]]],58],[[18,11],[[10,[13]]]],[[]],[[]],[[]],[[]],[[]],[58,142],[[142,[16,[[15,[18]]]]],58],[[58,145],58],[[142,145],142],[58,[[10,[13]]]],0,[[],[[16,[[15,[18]]]]]],0,[142,8],[143,8],[[18,11]],[18,[[8,[13,43]]]],[[]],[[]],[[]],[[]],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],12],[[],12],[[],12],[[],12],[[],12],[[18,11,13],10],[18,[[146,[13,77]]]],0,0,0,0,0,0],"p":[[3,"Command"],[3,"Aligned"],[3,"FieldOffset"],[3,"Unaligned"],[3,"ArgMatches"],[3,"Args"],[6,"Error"],[4,"Result"],[3,"Id"],[4,"Option"],[15,"str"],[3,"TypeId"],[3,"String"],[3,"Layout"],[3,"RwLock"],[3,"Arc"],[3,"PathBuf"],[3,"Variables"],[3,"JoinHandle"],[4,"Error"],[3,"DriverData"],[8,"CloneAny"],[3,"Global"],[3,"Box"],[8,"Serializer"],[3,"Ok"],[3,"Error"],[3,"DriverError"],[3,"Formatter"],[6,"Result"],[3,"DriverManager"],[15,"u16"],[3,"Iter"],[3,"Path"],[3,"ModuleManager"],[8,"DriverInterface"],[3,"HashMap"],[15,"usize"],[3,"Range"],[8,"Future"],[3,"Pin"],[4,"FrontendConfigData"],[3,"Error"],[15,"bool"],[3,"FrontendConfiguration"],[3,"FunctionBuilder"],[4,"FunctionType"],[8,"FunctionInterface"],[4,"ReturnCommand"],[3,"Up"],[3,"Down"],[3,"Switch"],[3,"Shift"],[3,"HID"],[3,"MidiController"],[3,"CommandPool"],[3,"NanoMessenger"],[3,"Variable"],[3,"Child"],[3,"Bash"],[3,"Pipe"],[6,"Result"],[15,"char"],[4,"Keyboard"],[3,"SendHidCommand"],[3,"SwitchHid"],[3,"ToggleHid"],[4,"HIDError"],[4,"Command"],[4,"MouseButton"],[4,"Modifier"],[4,"SpecialKey"],[4,"Mouse"],[4,"MouseDir"],[4,"Position"],[15,"i8"],[3,"Vec"],[3,"Key"],[3,"Special"],[3,"ModifierKey"],[3,"BasicString"],[3,"ComplexString"],[3,"Shortcut"],[4,"BasicKey"],[4,"LogLevel"],[3,"Log"],[4,"Channel"],[4,"GMSoundSet"],[4,"MidiError"],[4,"Channel"],[4,"GMSoundSet"],[3,"Note"],[3,"ConstPitchBend"],[3,"PitchBend"],[3,"Instrument"],[15,"u8"],[4,"Note"],[15,"f64"],[4,"MidiMsg"],[3,"ImmediateMove"],[3,"ImmediateScroll"],[3,"ConstMove"],[3,"ConstScroll"],[3,"Move"],[3,"Scroll"],[3,"LeftClick"],[3,"RightClick"],[15,"u64"],[15,"i32"],[3,"DriverData"],[4,"Protocol"],[6,"Result"],[3,"NanoMsg"],[4,"NanoMsgError"],[3,"HashFormat"],[4,"Error"],[15,"isize"],[3,"HashIter"],[3,"Output"],[3,"Flip"],[4,"LayoutError"],[3,"LayoutBuilder"],[4,"Address"],[3,"WrapResult"],[4,"InterfaceType"],[4,"ModuleType"],[3,"Module"],[4,"ModError"],[3,"ExternalFunction"],[3,"PyAny"],[6,"PyResult"],[3,"Pyo3Result"],[3,"UnboundedSender"],[4,"HidCommand"],[4,"FuncCommand"],[4,"DriverCommand"],[3,"ExternalDriver"],[3,"Data"],[3,"Receiver"],[8,"Clone"],[4,"VariableData"],[4,"Data"],[3,"VarDef"],[8,"Debug"],[8,"FnOnce"],[3,"Keys"],[8,"OrExit"],[8,"OrLog"],[8,"OrLogIgnore"],[3,"ConfigRPC"],[8,"FrontendConfig"],[13,"RPC"],[13,"HID"],[13,"NanoMsg"],[8,"StateHelpers"],[13,"ConstScroll"],[13,"ConstPitchBend"],[13,"Note"],[13,"PitchBend"],[13,"Instrument"],[13,"SendHidCommand"],[13,"Move"],[13,"NanoMsg"],[13,"Output"],[13,"Flip"],[13,"External"],[13,"Scroll"],[13,"Shortcut"],[13,"ComplexString"],[13,"ComplexStringLn"],[13,"ToggleHid"],[13,"SwitchHid"],[13,"ConstMove"],[13,"ImmediateMove"],[13,"DriverMatrix"],[13,"DriverAddr"],[13,"VarDef"],[13,"Var"]]},\
"key_server_cli":{"doc":"Key-Server Cli","t":[13,3,4,13,13,13,13,13,8,13,13,13,13,13,13,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,12,5,10,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12],"n":["AddLayer","Args","Command","DownLayer","GetVariable","Layer","LayerIdx","NumLayers","OrExit","RemoveLayer","SaveLayout","SetVariable","SwitchLayer","UpLayer","Variables","augment_args","augment_args_for_update","augment_subcommands","augment_subcommands_for_update","borrow","borrow","borrow_mut","borrow_mut","command","command","command_for_update","from","from","from_arg_matches","from_arg_matches","from_arg_matches_mut","from_arg_matches_mut","group_id","has_subcommand","into","into","ipc","main","or_exit","try_from","try_from","try_into","try_into","type_id","type_id","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches_mut","update_from_arg_matches_mut","data","idx","idx","json","name","name"],"q":["key_server_cli","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","key_server_cli::Command","","","","",""],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","",""],"i":[6,0,0,6,6,6,6,6,0,6,6,6,6,6,6,3,3,6,6,3,6,3,6,3,3,3,3,6,3,6,3,6,3,6,3,6,3,0,12,3,6,3,6,3,6,3,6,3,6,13,14,15,16,13,17],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,1],[1,1],[1,1],[1,1],[[]],[[]],[[]],[[]],[[],1],0,[[],1],[[]],[[]],[2,[[5,[3,4]]]],[2,[[5,[6,4]]]],[2,[[5,[3,4]]]],[2,[[5,[6,4]]]],[[],[[8,[7]]]],[9,10],[[]],[[]],0,[[]],[9],[[],5],[[],5],[[],5],[[],5],[[],11],[[],11],[[3,2],[[5,[4]]]],[[6,2],[[5,[4]]]],[[3,2],[[5,[4]]]],[[6,2],[[5,[4]]]],0,0,0,0,0,0],"p":[[3,"Command"],[3,"ArgMatches"],[3,"Args"],[6,"Error"],[4,"Result"],[4,"Command"],[3,"Id"],[4,"Option"],[15,"str"],[15,"bool"],[3,"TypeId"],[8,"OrExit"],[13,"SetVariable"],[13,"RemoveLayer"],[13,"SwitchLayer"],[13,"AddLayer"],[13,"GetVariable"]]},\
"kout":{"doc":"Kout","t":[3,11,11,11,11,11,11,11,11,11,11,12,11,5,5,11,11,11,11,11],"n":["Cli","augment_args","augment_args_for_update","borrow","borrow_mut","command","command_for_update","from","from_arg_matches","from_arg_matches_mut","group_id","inputs","into","kout_stdin","main","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut"],"q":["kout","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","Returns the argument unchanged.","","","","Optional input files (‘-’ can be passed to mean stdio)","Calls <code>U::from(self)</code>.","","","","","","",""],"i":[0,3,3,3,3,3,3,3,3,3,3,3,3,0,0,3,3,3,3,3],"f":[0,[1,1],[1,1],[[]],[[]],[[],1],[[],1],[[]],[2,[[5,[3,4]]]],[2,[[5,[3,4]]]],[[],[[7,[6]]]],0,[[]],[8],[[]],[[],5],[[],5],[[],9],[[3,2],[[5,[4]]]],[[3,2],[[5,[4]]]]],"p":[[3,"Command"],[3,"ArgMatches"],[3,"Cli"],[6,"Error"],[4,"Result"],[3,"Id"],[4,"Option"],[3,"HID"],[3,"TypeId"]]},\
"mcp23017_driver":{"doc":"MCP23017 Driver","t":[3,13,3,3,3,13,13,4,7,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12],"n":["DriverError","Input","MCP23017Data","MCP23017Driver","MCPModule","Matrix","Output","PinType","_1as_0lib_1header_0root_bmodule_bloader","as_c_ref","as_rust_ref","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","deserialize","deserialize","f_get","f_get","f_get","f_get","f_get","f_get_copy","f_get_copy","f_get_copy","f_get_copy","f_get_copy","f_get_copy","f_get_copy","f_get_copy","f_get_copy","f_get_copy","f_get_mut","f_get_mut","f_get_mut","f_get_mut","f_get_mut","f_get_mut_ptr","f_get_mut_ptr","f_get_mut_ptr","f_get_mut_ptr","f_get_mut_ptr","f_get_ptr","f_get_ptr","f_get_ptr","f_get_ptr","f_get_ptr","f_replace","f_replace","f_replace","f_replace","f_replace","f_replace","f_replace","f_replace","f_replace","f_replace","f_swap","f_swap","f_swap","f_swap","f_swap","f_swap","f_swap","f_swap","f_swap","f_swap","fmt","fmt","fmt","from","from","from","from","from","from_data","get_library","into","into","into","into","into","load_data","new","poll","serialize","serialize","set","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","invert","on_state","pin","pin","pull_high","x","y"],"q":["mcp23017_driver","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","mcp23017_driver::PinType","","","","","",""],"d":["Driver error","Single pin input","MCP23017 Driver Data","MCP23017 Driver","","Matrix pin configuration","Single pin output","Pin type, used to serialize pin configurations","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Load driver settings from data","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Initialize new driver from key server config data Returns …","","Poll the current state of the driver with the specified id","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,1,0,0,0,1,1,0,0,1,1,13,11,7,1,3,13,11,7,1,3,1,1,1,3,13,11,7,1,3,13,13,11,11,7,7,1,1,3,3,13,11,7,1,3,13,11,7,1,3,13,11,7,1,3,13,13,11,11,7,7,1,1,3,3,13,13,11,11,7,7,1,1,3,3,7,7,1,13,11,7,1,3,11,0,13,11,7,1,3,13,7,13,1,3,13,1,7,13,11,7,1,3,13,11,7,1,3,13,11,7,1,3,22,23,23,24,23,22,22],"f":[0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1,1],[[]],[[],[[2,[1]]]],[[],[[2,[3]]]],[[[5,[4]]]],[[[5,[4]]]],[[[5,[4]]]],[[[5,[4]]]],[[[5,[4]]]],[[[5,[6]]]],[[[5,[4]]]],[[[5,[6]]]],[[[5,[4]]]],[[[5,[6]]]],[[[5,[4]]]],[[[5,[4]]]],[[[5,[6]]]],[[[5,[4]]]],[[[5,[6]]]],[[[5,[4]]]],[[[5,[4]]]],[[[5,[4]]]],[[[5,[4]]]],[[[5,[4]]]],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[[[5,[4]]]],[[[5,[6]]]],[[[5,[4]]]],[[[5,[6]]]],[[[5,[6]]]],[[[5,[4]]]],[[[5,[4]]]],[[[5,[6]]]],[[[5,[6]]]],[[[5,[4]]]],[[[5,[4]]]],[[[5,[6]]]],[[[5,[4]]]],[[[5,[6]]]],[[[5,[6]]]],[[[5,[4]]]],[[[5,[6]]]],[[[5,[4]]]],[[[5,[4]]]],[[[5,[6]]]],[[7,8],9],[[7,8],9],[[1,8],9],[[]],[[]],[[]],[[]],[[]],[10,[[2,[11,7]]]],[[],12],[[]],[[]],[[]],[[]],[[]],[[13,14],[[16,[15,14]]]],[17,7],[[13,15],[[16,[[19,[18]],14]]]],[1,2],[3,2],[[13,15,20,18],[[16,[14]]]],[[]],[[],17],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],21],[[],21],[[],21],[[],21],[[],21],0,0,0,0,0,0,0],"p":[[4,"PinType"],[4,"Result"],[3,"MCP23017Data"],[3,"Aligned"],[3,"FieldOffset"],[3,"Unaligned"],[3,"DriverError"],[3,"Formatter"],[6,"Result"],[15,"str"],[3,"MCP23017Driver"],[3,"DriverModuleRef"],[3,"MCPModule"],[3,"RString"],[15,"u64"],[4,"RResult"],[3,"String"],[15,"u16"],[3,"RVec"],[15,"usize"],[3,"TypeId"],[13,"Matrix"],[13,"Input"],[13,"Output"]]},\
"mcp3008_driver":{"doc":"MCP3008 Driver","t":[],"n":[],"q":[],"d":[],"i":[],"f":[],"p":[]},\
"ws_1in5_driver":{"doc":"WS 1inch5 Driver","t":[13,3,13,3,8,3,3,8,4,13,3,13,3,7,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["Empty","EmptyState","Home","HomeState","OrPrint","Resources","ScreenHid","State","StateType","Term","TermState","Variables","VariablesState","_1as_0lib_1header_0root_bmodule_bloader","approx_from","approx_from","approx_from","approx_from","approx_from","approx_from","approx_from","approx_into","approx_into","approx_into","approx_into","approx_into","approx_into","approx_into","as_c_ref","as_rust_ref","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","draw","draw","draw","draw","drop","drop","drop","drop","drop","drop","drop","enter","enter","enter","enter","eq","exit","exit","f_get","f_get","f_get","f_get","f_get","f_get","f_get","f_get_copy","f_get_copy","f_get_copy","f_get_copy","f_get_copy","f_get_copy","f_get_copy","f_get_copy","f_get_copy","f_get_copy","f_get_copy","f_get_copy","f_get_copy","f_get_copy","f_get_mut","f_get_mut","f_get_mut","f_get_mut","f_get_mut","f_get_mut","f_get_mut","f_get_mut_ptr","f_get_mut_ptr","f_get_mut_ptr","f_get_mut_ptr","f_get_mut_ptr","f_get_mut_ptr","f_get_mut_ptr","f_get_ptr","f_get_ptr","f_get_ptr","f_get_ptr","f_get_ptr","f_get_ptr","f_get_ptr","f_replace","f_replace","f_replace","f_replace","f_replace","f_replace","f_replace","f_replace","f_replace","f_replace","f_replace","f_replace","f_replace","f_replace","f_swap","f_swap","f_swap","f_swap","f_swap","f_swap","f_swap","f_swap","f_swap","f_swap","f_swap","f_swap","f_swap","f_swap","fmt","font","from","from","from","from","from","from","from","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","get_library","hash","hold_button","hold_button","hold_key","hold_key","hold_key","hold_key","hold_key","hold_modifier","hold_modifier","hold_modifier","hold_special","hold_special","hold_special","hold_special","hold_special","init","init","init","init","init","init","init","into","into","into","into","into","into","into","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","move_mouse_x","move_mouse_x","move_mouse_y","move_mouse_y","new","new","new","new","or_log","press_basic_str","press_basic_str","press_str","release_button","release_button","release_key","release_key","release_modifier","release_modifier","release_modifier","release_special","release_special","scale10","scale12","scale20","scale30","scroll_wheel","scroll_wheel","send_command","send_keyboard","send_mouse","to_owned","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","value_from","value_from","value_from","value_from","value_from","value_from","value_from","value_into","value_into","value_into","value_into","value_into","value_into","value_into","vzip","vzip","vzip","vzip","vzip","vzip","vzip"],"q":["ws_1in5_driverd":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[2,0,2,0,0,0,0,0,0,2,0,2,0,0,7,19,26,9,10,11,2,7,19,26,9,10,11,2,2,2,7,19,26,9,10,11,2,7,19,26,9,10,11,2,2,2,7,19,26,9,10,11,2,7,19,26,9,10,11,2,27,9,10,11,7,19,26,9,10,11,2,27,9,10,11,2,27,11,7,19,26,9,10,11,2,7,7,19,19,26,26,9,9,10,10,11,11,2,2,7,19,26,9,10,11,2,7,19,26,9,10,11,2,7,19,26,9,10,11,2,7,7,19,19,26,26,9,9,10,10,11,11,2,2,7,7,19,19,26,26,9,9,10,10,11,11,2,2,2,7,7,19,26,9,10,11,2,7,19,26,9,10,11,2,0,2,19,27,19,27,9,10,11,19,27,11,19,27,9,10,11,7,19,26,9,10,11,2,7,19,26,9,10,11,2,7,19,26,9,10,11,2,19,27,19,27,19,9,10,11,28,19,27,19,19,27,19,27,19,27,11,19,27,7,7,7,7,19,27,19,19,19,2,7,19,26,9,10,11,2,7,19,26,9,10,11,2,7,7,19,19,26,26,9,9,10,10,11,11,2,2,7,7,19,19,26,26,9,9,10,10,11,11,2,2,7,19,26,9,10,11,2,7,19,26,9,10,11,2,7,19,26,9,10,11,2,7,19,26,9,10,11,2],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[2,2],[[]],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[[[6,[[5,[4]]]],7,8]],[[9,[6,[[5,[4]]]],7,8]],[[10,[6,[[5,[4]]]],7,8]],[[11,[6,[[5,[4]]]],7,8]],[3],[3],[3],[3],[3],[3],[3],[[2,[6,[[5,[4]]]],7,8]],[[9,2,[6,[[5,[4]]]],7,8]],[[10,2,[6,[[5,[4]]]],7,8]],[[11,2,[6,[[5,[4]]]],7,8]],[[2,2],12],[[2,[6,[[5,[4]]]],7,8]],[[11,2,[6,[[5,[4]]]],7,8]],[[[14,[13]]]],[[[14,[13]]]],[[[14,[13]]]],[[[14,[13]]]],[[[14,[13]]]],[[[14,[13]]]],[[[14,[13]]]],[[[14,[15]]]],[[[14,[13]]]],[[[14,[15]]]],[[[14,[13]]]],[[[14,[13]]]],[[[14,[15]]]],[[[14,[15]]]],[[[14,[13]]]],[[[14,[13]]]],[[[14,[15]]]],[[[14,[15]]]],[[[14,[13]]]],[[[14,[13]]]],[[[14,[15]]]],[[[14,[13]]]],[[[14,[13]]]],[[[14,[13]]]],[[[14,[13]]]],[[[14,[13]]]],[[[14,[13]]]],[[[14,[13]]]],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[[[14,[15]]]],[[[14,[13]]]],[[[14,[15]]]],[[[14,[13]]]],[[[14,[13]]]],[[[14,[15]]]],[[[14,[13]]]],[[[14,[15]]]],[[[14,[15]]]],[[[14,[13]]]],[[[14,[13]]]],[[[14,[15]]]],[[[14,[15]]]],[[[14,[13]]]],[[[14,[15]]]],[[[14,[13]]]],[[[14,[13]]]],[[[14,[15]]]],[[[14,[13]]]],[[[14,[15]]]],[[[14,[15]]]],[[[14,[13]]]],[[[14,[13]]]],[[[14,[15]]]],[[[14,[15]]]],[[[14,[13]]]],[[[14,[15]]]],[[[14,[13]]]],[[2,16],17],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],18],[2],[[19,20]],[[20,[6,[[5,[4]]]],7,8]],[[19,20]],[[20,[6,[[5,[4]]]],7,8]],[[9,20,[6,[[5,[4]]]],7,8]],[[10,20,[6,[[5,[4]]]],7,8]],[[11,20,[6,[[5,[4]]]],7,8]],[[19,20]],[[20,[6,[[5,[4]]]],7,8]],[[11,20,[6,[[5,[4]]]],7,8]],[[19,20]],[[20,[6,[[5,[4]]]],7,8]],[[9,20,[6,[[5,[4]]]],7,8]],[[10,20,[6,[[5,[4]]]],7,8]],[[11,20,[6,[[5,[4]]]],7,8]],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[19,21]],[[21,[6,[[5,[4]]]],7,8]],[[19,21]],[[21,[6,[[5,[4]]]],7,8]],[[],19],[[],9],[[[6,[[5,[4]]]],7],10],[[[6,[[5,[4]]]],7],11],[22,23],[[19,24]],[[24,[6,[[5,[4]]]],7,8]],[[19,24,24]],[[19,20]],[[20,[6,[[5,[4]]]],7,8]],[[19,20]],[[20,[6,[[5,[4]]]],7,8]],[[19,20]],[[20,[6,[[5,[4]]]],7,8]],[[11,20,[6,[[5,[4]]]],7,8]],[[19,20]],[[20,[6,[[5,[4]]]],7,8]],0,0,0,0,[[19,21]],[[21,[6,[[5,[4]]]],7,8]],[[19,24]],[19],[19],[[]],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[]],[[]],[[]],[[]],[[]],[[]],[[]]],"p":[[4,"Result"],[4,"StateType"],[15,"usize"],[3,"WS1in5"],[3,"Mutex"],[3,"Arc"],[3,"Resources"],[3,"Runtime"],[3,"HomeState"],[3,"VariablesState"],[3,"TermState"],[15,"bool"],[3,"Aligned"],[3,"FieldOffset"],[3,"Unaligned"],[3,"Formatter"],[6,"Result"],[3,"HidModuleRef"],[3,"ScreenHid"],[15,"u32"],[15,"i8"],[15,"str"],[4,"Option"],[3,"RString"],[3,"TypeId"],[3,"EmptyState"],[8,"State"],[8,"OrPrint"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
